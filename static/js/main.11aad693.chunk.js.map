{"version":3,"sources":["Header.js","Body.js","App.js","serviceWorker.js","Test.js","index.js"],"names":["Header","props","algorithmSelect","selectedAlgorithm","setState","speedSelect","selectedSpeed","calculate","state","Number","className","onClick","mazeSelect","this","clearGrid","clearPath","Component","Body","allowDrop","event","i","j","allOccupiedPlacesCheck","wallRestrictedSpace","filter","ele","length","preventDefault","drop","a","nodeType","dataTransfer","getData","startNodei","startNodej","endNodei","endNodej","dragStart","setData","doubleClickHandler","clickedFlag","arr","style","backgroundColor","wallArr","push","arrr","clickHandler","mouseMoveHandler","arr1","dijkstra","parenti","parentj","included","shortestPath","dfs","mouseDownUpFlag","algorithm","maze","speed","recursiveDiv","dijkstraCalculate","aStarCalculate","dfsCalculate","bfsCalculate","bestFirstSearchCalculate","wall","recursionOfRecursiveDivision","istart","iend","jstart","jend","total","bisectLine","Math","floor","random","skip","skipPoint","sptSet","forEach","element","distance","MAX_SAFE_INTEGER","timerSpeed","setInterval","disableGridFlag","u","dijkstraMinDistanceNode","clearInterval","timer","arr2","dijkstraRegisterShortest","v","x","y","min","minInd","returnManhattenDistance","abs","fDistance","aStarMinDistanceNode","stack","adjacent","dfsAdjacentNodes","pop","dfsRegisterPath","tempi","tempj","queue","shift","bfsRegisterShortest","marginTop","display","map","key","onDragOver","onDrop","onDoubleClick","onMouseEnter","onDragStart","draggable","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.11aad693.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { FaAngleDown } from \"react-icons/fa\";\r\nimport './Header.css';\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedAlgorithm:\"\",\r\n            selectedSpeed:Number\r\n        }\r\n    }\r\n\r\n    algorithmSelect = (selectedAlgorithm)=>{\r\n        this.props.algorithmSelect(selectedAlgorithm);\r\n        this.setState({\r\n            selectedAlgorithm\r\n        })\r\n    }\r\n\r\n    speedSelect = (selectedSpeed)=>{\r\n        this.setState({\r\n            selectedSpeed\r\n        })\r\n    }\r\n\r\n    calculate = () =>{\r\n        if(this.state.selectedAlgorithm!=\"\"){\r\n            this.props.calculate(this.state.selectedAlgorithm,this.state.selectedSpeed);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <ul>\r\n                    <li className=\"dropdown\">\r\n                        <button className=\"dropbtn\">Algorithms{\" \"}<FaAngleDown/></button>\r\n                        <div className=\"dropdown-content\">\r\n                            <button onClick={()=>this.algorithmSelect(\"A*\")}>A* Search Algorithm</button>\r\n                            <button onClick={()=>this.algorithmSelect(\"bestFsearch\")}>Best First Search Algorithm</button>\r\n                            <button onClick={()=>this.algorithmSelect(\"dijkstra\")}>Dijkstra's Algorithm</button>\r\n                            <button onClick={()=>this.algorithmSelect(\"bfs\")}>Breadth-First Search Algorithm</button>\r\n                            <button onClick={()=>this.algorithmSelect(\"dfs\")}>Depth-First Search Algorithm</button>\r\n                        </div>\r\n                    </li>\r\n                    \r\n                    <li className=\"dropdown\">\r\n                        <button className=\"dropbtn\">Mazes{\" \"}<FaAngleDown/></button>\r\n                        <div className=\"dropdown-content\">\r\n                        <button onClick={()=>this.props.mazeSelect(\"rd\",this.state.selectedSpeed)}>Random</button>\r\n                        </div>\r\n                    </li>\r\n\r\n                    <li><button onClick={this.calculate}>Calculate</button></li>\r\n                    <li className=\"rightFloat\"><button onClick={()=>this.props.clearGrid()}>Clear Grid</button></li>\r\n                    <li className=\"rightFloat\"><button onClick={()=>this.props.clearPath()}>Clear Path</button></li>\r\n                    <li className=\"dropdown rightFloat\">\r\n                        <button className=\"dropbtn\">Speed{\" \"}<FaAngleDown/></button>\r\n                        <div className=\"dropdown-content\">\r\n                            <button onClick={()=>this.speedSelect(0)}>Original</button>\r\n                            <button onClick={()=>this.speedSelect(4)}>Fast</button>\r\n                            <button onClick={()=>this.speedSelect(1)}>Medium</button>\r\n                            <button onClick={()=>this.speedSelect(2)}>Slow</button>\r\n                        </div>\r\n                    </li>\r\n                </ul>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport { FaHiking, FaArchway } from \"react-icons/fa\";\r\nimport Header from './Header';\r\nimport './Body.css';\r\n\r\nclass Body extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let arr = [];\r\n        for (let i = 0; i < 20; i++) {\r\n            arr[i] = [];\r\n            for (let j = 0; j < 61; j++) {\r\n                arr[i][j] = { dijkstra: { parenti: -1, parentj: -1, included: false, shortestPath: false }, dfs: { included: false, shortestPath: false } };\r\n            }\r\n        }\r\n        this.state = {\r\n            arr: arr,\r\n            startNodei: 10,\r\n            startNodej: 10,\r\n            endNodei: 10,\r\n            endNodej: 50,\r\n            wallRestrictedSpace: [],\r\n            clickedFlag: false,\r\n            mouseDownUpFlag: false,\r\n            disableGridFlag: false,\r\n            selectedAlgorithm: \"\"\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let arr = this.state.arr;\r\n        arr.forEach((ele, i) => {\r\n            ele.forEach((element, j) => {\r\n                element.style = { backgroundColor: \"white\" }\r\n            })\r\n        })\r\n\r\n        await this.setState({\r\n            arr: arr\r\n        })\r\n    }\r\n\r\n    allowDrop = (event, i, j) => {\r\n        if (!this.allOccupiedPlacesCheck(i, j) && ((this.state.wallRestrictedSpace.filter(ele => ele.i == i && ele.j == j)).length == 0)) {\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n    drop = async (event, i, j) => {\r\n        event.preventDefault();\r\n        const nodeType = event.dataTransfer.getData(\"nodeType\");\r\n        if (nodeType == \"start\") {\r\n            await this.setState({\r\n                startNodei: i,\r\n                startNodej: j\r\n            })\r\n        } else if (nodeType == \"end\") {\r\n            await this.setState({\r\n                endNodei: i,\r\n                endNodej: j\r\n            })\r\n        }\r\n    }\r\n\r\n    dragStart = (event, i, j, nodeType) => {\r\n        event.dataTransfer.setData(\"nodeType\", nodeType);\r\n    }\r\n\r\n    allOccupiedPlacesCheck = (i, j) => {\r\n        const { startNodei, startNodej, endNodei, endNodej } = this.state;\r\n\r\n        if ((i == startNodei && j == startNodej) || (i == endNodei && j == endNodej)) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    doubleClickHandler = async (event, i, j) => {\r\n        await this.setState({\r\n            clickedFlag: false\r\n        })\r\n        let arr = this.state.arr;\r\n        if (!this.allOccupiedPlacesCheck(i, j)) {\r\n            if (arr[i][j].style.backgroundColor != \"black\") {\r\n                arr[i][j].style = { backgroundColor: \"black\" };\r\n                let wallArr = this.state.wallRestrictedSpace;\r\n                wallArr.push({ i, j });\r\n                await this.setState({\r\n                    wallRestrictedSpace: wallArr,\r\n                    arr: arr\r\n                })\r\n\r\n            } else {\r\n                arr[i][j].style = { backgroundColor: \"white\" };\r\n                let arrr = this.state.wallRestrictedSpace.filter(ele => ele.i != i || ele.j != j)\r\n                await this.setState({\r\n                    wallRestrictedSpace: arrr,\r\n                    arr: arr\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    clickHandler = async (event, i, j) => {\r\n        await this.setState({\r\n            clickedFlag: !this.state.clickedFlag\r\n        })\r\n    }\r\n\r\n    mouseMoveHandler = async (event, i, j) => {\r\n        if (this.state.clickedFlag) {\r\n            let arr = this.state.arr;\r\n            if (!this.allOccupiedPlacesCheck(i, j)) {\r\n                if (arr[i][j].style.backgroundColor != \"black\") {\r\n                    arr[i][j].style = { backgroundColor: \"black\" }\r\n                    let wallArr = this.state.wallRestrictedSpace;\r\n                    wallArr.push({ i, j });\r\n                    await this.setState({\r\n                        wallRestrictedSpace: wallArr,\r\n                        arr: arr\r\n                    })\r\n                } else {\r\n                    arr[i][j].style = { backgroundColor: \"white\" }\r\n                    let arrr = this.state.wallRestrictedSpace.filter(ele => ele.i != i || ele.j != j);\r\n                    await this.setState({\r\n                        wallRestrictedSpace: arrr,\r\n                        arr: arr\r\n                    })\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /***************Algorithms Implementation */\r\n    clearGrid = async () => {\r\n        let arr1 = this.state.arr;\r\n        for (let i = 0; i < 20; i++) {\r\n            for (let j = 0; j < 61; j++) {\r\n                arr1[i][j].dijkstra = { parenti: -1, parentj: -1, included: false, shortestPath: false };\r\n                arr1[i][j].dfs = { included: false, shortestPath: false };\r\n                arr1[i][j].style = { backgroundColor: \"white\" };\r\n            }\r\n        }\r\n        await this.setState({\r\n            arr: arr1,\r\n            startNodei: 10,\r\n            startNodej: 10,\r\n            endNodei: 10,\r\n            endNodej: 50,\r\n            wallRestrictedSpace: [],\r\n            clickedFlag: false,\r\n            mouseDownUpFlag: false,\r\n            selectedAlgorithm: \"\"\r\n        })\r\n    }\r\n\r\n    clearPath = async () => {\r\n        let arr1 = this.state.arr;\r\n        for (let i = 0; i < 20; i++) {\r\n            for (let j = 0; j < 61; j++) {\r\n                arr1[i][j].dijkstra = { parenti: -1, parentj: -1, included: false, shortestPath: false };\r\n                arr1[i][j].dfs = { included: false, shortestPath: false };\r\n                if(arr1[i][j].style.backgroundColor==\"yellow\"||arr1[i][j].style.backgroundColor==\"green\"){\r\n                    arr1[i][j].style = { backgroundColor: \"white\" };\r\n                }\r\n            }\r\n        }\r\n        await this.setState({\r\n            arr: arr1,\r\n            clickedFlag: false,\r\n            mouseDownUpFlag: false\r\n        })\r\n    }\r\n\r\n    algorithmSelect = (algorithm) => {\r\n            this.setState({\r\n                selectedAlgorithm : algorithm\r\n            })\r\n    }\r\n\r\n    mazeSelect = (maze,speed) => {\r\n        if(maze == \"rd\"){\r\n            this.recursiveDiv(speed);\r\n        }\r\n    }\r\n\r\n    calculate = (algorithm, speed) => {\r\n        if (algorithm == \"dijkstra\") {\r\n            this.dijkstraCalculate(speed);\r\n        }\r\n        if (algorithm == \"A*\") {\r\n            this.aStarCalculate(speed);\r\n        }\r\n        if (algorithm == \"dfs\") {\r\n            this.dfsCalculate(speed);\r\n        }\r\n        if (algorithm == \"bfs\") {\r\n            this.bfsCalculate(speed);\r\n        }\r\n        if(algorithm == \"bestFsearch\"){\r\n            this.bestFirstSearchCalculate(speed);\r\n        }\r\n    }\r\n\r\n    recursiveDiv = async (speed) => {\r\n        let wall = this.state.wallRestrictedSpace;\r\n        let style = this.state.arr;\r\n        // if(speed==0){\r\n            for(let i=0;i<20;i++){\r\n                style[i][0].style = { backgroundColor: \"black\" };\r\n                wall.push({i:i,j:0});\r\n                this.setState({\r\n                    arr:style,\r\n                    wallRestrictedSpace:wall\r\n                })\r\n            }\r\n            for(let i=1;i<61;i++){\r\n                style[19][i].style = { backgroundColor: \"black\" };\r\n                wall.push({i:19,j:i});\r\n                this.setState({\r\n                    arr:style,\r\n                    wallRestrictedSpace:wall\r\n                })\r\n            }\r\n            for(let i=19;i>=0;i--){\r\n                style[i][60].style = { backgroundColor: \"black\" };\r\n                wall.push({i:i,j:60});\r\n                this.setState({\r\n                    arr:style,\r\n                    wallRestrictedSpace:wall\r\n                })\r\n            }\r\n            for(let i=59;i>=1;i--){\r\n                style[0][i].style = { backgroundColor: \"black\" };\r\n                wall.push({i:0,j:i});\r\n                this.setState({\r\n                    arr:style,\r\n                    wallRestrictedSpace:wall\r\n                })\r\n            }\r\n            this.recursionOfRecursiveDivision(1,18,1,59);\r\n        // }\r\n    }\r\n\r\n    recursionOfRecursiveDivision = async (istart,iend,jstart,jend)=>{\r\n        if(iend<=istart||iend-istart<2||jend<=jstart||jend-jstart<2){\r\n            return;\r\n        }\r\n        let wall = this.state.wallRestrictedSpace;\r\n        let style = this.state.arr;\r\n            if(jend-jstart > iend-istart ){\r\n                let total = jend-jstart;\r\n                let bisectLine = Math.floor(Math.random()*total);\r\n                let skip = iend-istart;\r\n                let skipPoint = Math.floor(Math.random()*skip);\r\n                for(let i=istart;i<=iend;i++){\r\n                    if(i==istart+skipPoint||\r\n                       (this.state.startNodei==i&&this.state.startNodej==jstart+bisectLine)||\r\n                       (this.state.endNodei==i&&this.state.endNodej==jstart+bisectLine)||\r\n                       (style[i][jstart+bisectLine].style.backgroundColor == \"black\")\r\n                    ){\r\n                        continue;\r\n                    }\r\n                    style[i][jstart+bisectLine].style = { backgroundColor: \"black\" };\r\n                    wall.push({i:i,j:jstart+bisectLine});\r\n                    this.setState({\r\n                        arr:style,\r\n                        wallRestrictedSpace:wall\r\n                    })\r\n                }\r\n                   this.recursionOfRecursiveDivision(istart,iend,jstart,jstart+bisectLine-2);\r\n                   this.recursionOfRecursiveDivision(istart,iend,jstart+bisectLine+2,jend);\r\n            }else{\r\n                let total = iend-istart;\r\n                let bisectLine = Math.floor(Math.random()*total);\r\n                let skip = jend-jstart;\r\n                let skipPoint = Math.floor(Math.random()*skip);\r\n                for(let i=jstart;i<=jend;i++){\r\n                    if(i==jstart+skipPoint||\r\n                      (this.state.startNodei==istart+bisectLine&&this.state.startNodej==i)||\r\n                      (this.state.endNodei==istart+bisectLine&&this.state.endNodej==i)||\r\n                      (style[istart+bisectLine][i].style.backgroundColor == \"black\")\r\n                    ){\r\n                        continue;\r\n                    }\r\n                    style[istart+bisectLine][i].style = { backgroundColor: \"black\" };\r\n                    wall.push({i:istart+bisectLine,j:i});\r\n                    this.setState({\r\n                        arr:style,\r\n                        wallRestrictedSpace:wall\r\n                    })\r\n                }\r\n                this.recursionOfRecursiveDivision(istart,istart+bisectLine-2,jstart,jend);\r\n                this.recursionOfRecursiveDivision(istart+bisectLine+2,iend,jstart,jend);\r\n            }\r\n\r\n\r\n    }\r\n\r\n    dijkstraCalculate = async (speed) => {\r\n\r\n        const { arr, startNodei, startNodej } = this.state;\r\n        let sptSet = [];\r\n        arr.forEach((ele, i) => {\r\n            ele.forEach((element, j) => {\r\n                if (i == startNodei && j == startNodej) {\r\n                    sptSet.push({ i, j, distance: 0 })\r\n                } else {\r\n                    sptSet.push({ i, j, distance: Number.MAX_SAFE_INTEGER })\r\n                }\r\n            })\r\n        })\r\n\r\n        let v = 0;\r\n\r\n        let timerSpeed = Number;\r\n        if (speed == 1) {\r\n            timerSpeed = 200;\r\n        } else if (speed == 2) {\r\n            timerSpeed = 500;\r\n        } else if (speed == 4) {\r\n            timerSpeed = 1;\r\n        }\r\n        if (speed != 0) {\r\n            let timer = await setInterval(async () => {\r\n                this.setState({\r\n                    disableGridFlag: true\r\n                })\r\n                let u = this.dijkstraMinDistanceNode(sptSet);\r\n                if (u == -1) {\r\n                    clearInterval(timer);\r\n                    this.setState({\r\n                        disableGridFlag: false\r\n                    })\r\n                    return;\r\n                }\r\n                let arr1 = arr;\r\n                arr1[sptSet[u].i][sptSet[u].j].dijkstra.included = true;\r\n\r\n                await this.setState({\r\n                    arr: arr1\r\n                })\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == sptSet[u].i - 1 && ele.j == sptSet[u].j)).length == 0)\r\n                    && (sptSet[u].i - 1 >= 0 && sptSet[u].i - 1 < 20)\r\n                    && (sptSet[u].j >= 0 && sptSet[u].j < 61\r\n                        && !(arr1[sptSet[u].i - 1][sptSet[u].j].dijkstra.included)\r\n                    )\r\n                ) {\r\n\r\n                    if (sptSet[u].distance + 1 < sptSet[u - 61].distance) {\r\n                        sptSet[u - 61].distance = sptSet[u].distance + 1;\r\n                        let arr2 = arr;\r\n                        arr2[sptSet[u].i - 1][sptSet[u].j].dijkstra.parenti = sptSet[u].i;\r\n                        arr2[sptSet[u].i - 1][sptSet[u].j].dijkstra.parentj = sptSet[u].j;\r\n                        await this.setState({\r\n                            arr: arr2\r\n                        })\r\n\r\n                    }\r\n                }\r\n\r\n                // i+1 adjacent\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == sptSet[u].i + 1 && ele.j == sptSet[u].j)).length == 0)\r\n                    && (sptSet[u].i + 1 >= 0 && sptSet[u].i + 1 < 20)\r\n                    && (sptSet[u].j >= 0 && sptSet[u].j < 61\r\n                        && !(arr1[sptSet[u].i + 1][sptSet[u].j].dijkstra.included)\r\n                    )\r\n                ) {\r\n\r\n                    if (sptSet[u].distance + 1 < sptSet[u + 61].distance) {\r\n                        sptSet[u + 61].distance = sptSet[u].distance + 1;\r\n                        let arr2 = arr;\r\n                        arr2[sptSet[u].i + 1][sptSet[u].j].dijkstra.parenti = sptSet[u].i;\r\n                        arr2[sptSet[u].i + 1][sptSet[u].j].dijkstra.parentj = sptSet[u].j;\r\n                        await this.setState({\r\n                            arr: arr2\r\n                        })\r\n\r\n                    }\r\n                }\r\n\r\n                // j-1 adjacent\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == sptSet[u].i && ele.j == sptSet[u].j - 1)).length == 0)\r\n                    && (sptSet[u].i >= 0 && sptSet[u].i < 20)\r\n                    && (sptSet[u].j - 1 >= 0 && sptSet[u].j - 1 < 61\r\n                        && !(arr1[sptSet[u].i][sptSet[u].j - 1].dijkstra.included)\r\n                    )\r\n                ) {\r\n\r\n                    if (sptSet[u].distance + 1 < sptSet[u - 1].distance) {\r\n                        sptSet[u - 1].distance = sptSet[u].distance + 1;\r\n                        let arr2 = arr;\r\n                        arr2[sptSet[u].i][sptSet[u].j - 1].dijkstra.parenti = sptSet[u].i;\r\n                        arr2[sptSet[u].i][sptSet[u].j - 1].dijkstra.parentj = sptSet[u].j;\r\n                        await this.setState({\r\n                            arr: arr2\r\n                        })\r\n\r\n                    }\r\n                }\r\n\r\n                // j+1 adjacent\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == sptSet[u].i && ele.j == sptSet[u].j + 1)).length == 0)\r\n                    && (sptSet[u].i >= 0 && sptSet[u].i < 20)\r\n                    && (sptSet[u].j + 1 >= 0 && sptSet[u].j + 1 < 61\r\n                        && !(arr1[sptSet[u].i][sptSet[u].j + 1].dijkstra.included)\r\n                    )\r\n                ) {\r\n\r\n                    if (sptSet[u].distance + 1 < sptSet[u + 1].distance) {\r\n                        sptSet[u + 1].distance = sptSet[u].distance + 1;\r\n                        let arr2 = arr;\r\n                        arr2[sptSet[u].i][sptSet[u].j + 1].dijkstra.parenti = sptSet[u].i;\r\n                        arr2[sptSet[u].i][sptSet[u].j + 1].dijkstra.parentj = sptSet[u].j;\r\n                        await this.setState({\r\n                            arr: arr2\r\n                        })\r\n\r\n                    }\r\n                }\r\n\r\n                if ((sptSet[u].i == this.state.endNodei && sptSet[u].j == this.state.endNodej)) {\r\n                    this.dijkstraRegisterShortest(speed);\r\n                    clearInterval(timer);\r\n                }\r\n                v++;\r\n\r\n            }, timerSpeed);\r\n        } else {\r\n            for (let i = 0; i < sptSet.length; i++) {\r\n                let u = this.dijkstraMinDistanceNode(sptSet);\r\n                if (u == -1) {\r\n                    this.setState({\r\n                        disableGridFlag: false\r\n                    })\r\n                    break;\r\n                }\r\n                let arr1 = arr;\r\n                arr1[sptSet[u].i][sptSet[u].j].dijkstra.included = true;\r\n\r\n                this.setState({\r\n                    arr: arr1\r\n                })\r\n\r\n                //i-1 adjacent\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == sptSet[u].i - 1 && ele.j == sptSet[u].j)).length == 0)\r\n                    && (sptSet[u].i - 1 >= 0 && sptSet[u].i - 1 < 20)\r\n                    && (sptSet[u].j >= 0 && sptSet[u].j < 61\r\n                        && !(arr1[sptSet[u].i - 1][sptSet[u].j].dijkstra.included)\r\n                    )\r\n                ) {\r\n                    if (sptSet[u].distance + 1 < sptSet[u - 61].distance) {\r\n                        sptSet[u - 61].distance = sptSet[u].distance + 1;\r\n                        let arr2 = arr;\r\n                        arr2[sptSet[u].i - 1][sptSet[u].j].dijkstra.parenti = sptSet[u].i;\r\n                        arr2[sptSet[u].i - 1][sptSet[u].j].dijkstra.parentj = sptSet[u].j;\r\n                        this.setState({\r\n                            arr: arr2\r\n                        })\r\n                    }\r\n                }\r\n\r\n                // i+1 adjacent\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == sptSet[u].i + 1 && ele.j == sptSet[u].j)).length == 0)\r\n                    && (sptSet[u].i + 1 >= 0 && sptSet[u].i + 1 < 20)\r\n                    && (sptSet[u].j >= 0 && sptSet[u].j < 61\r\n                        && !(arr1[sptSet[u].i + 1][sptSet[u].j].dijkstra.included)\r\n                    )\r\n                ) {\r\n                    if (sptSet[u].distance + 1 < sptSet[u + 61].distance) {\r\n                        sptSet[u + 61].distance = sptSet[u].distance + 1;\r\n                        let arr2 = arr;\r\n                        arr2[sptSet[u].i + 1][sptSet[u].j].dijkstra.parenti = sptSet[u].i;\r\n                        arr2[sptSet[u].i + 1][sptSet[u].j].dijkstra.parentj = sptSet[u].j;\r\n                        this.setState({\r\n                            arr: arr2\r\n                        })\r\n                    }\r\n                }\r\n\r\n                // j-1 adjacent\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == sptSet[u].i && ele.j == sptSet[u].j - 1)).length == 0)\r\n                    && (sptSet[u].i >= 0 && sptSet[u].i < 20)\r\n                    && (sptSet[u].j - 1 >= 0 && sptSet[u].j - 1 < 61\r\n                        && !(arr1[sptSet[u].i][sptSet[u].j - 1].dijkstra.included)\r\n                    )\r\n                ) {\r\n                    if (sptSet[u].distance + 1 < sptSet[u - 1].distance) {\r\n                        sptSet[u - 1].distance = sptSet[u].distance + 1;\r\n                        let arr2 = arr;\r\n                        arr2[sptSet[u].i][sptSet[u].j - 1].dijkstra.parenti = sptSet[u].i;\r\n                        arr2[sptSet[u].i][sptSet[u].j - 1].dijkstra.parentj = sptSet[u].j;\r\n                        this.setState({\r\n                            arr: arr2\r\n                        })\r\n                    }\r\n                }\r\n\r\n                // j+1 adjacent\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == sptSet[u].i && ele.j == sptSet[u].j + 1)).length == 0)\r\n                    && (sptSet[u].i >= 0 && sptSet[u].i < 20)\r\n                    && (sptSet[u].j + 1 >= 0 && sptSet[u].j + 1 < 61\r\n                        && !(arr1[sptSet[u].i][sptSet[u].j + 1].dijkstra.included)\r\n                    )\r\n                ) {\r\n                    if (sptSet[u].distance + 1 < sptSet[u + 1].distance) {\r\n                        sptSet[u + 1].distance = sptSet[u].distance + 1;\r\n                        let arr2 = arr;\r\n                        arr2[sptSet[u].i][sptSet[u].j + 1].dijkstra.parenti = sptSet[u].i;\r\n                        arr2[sptSet[u].i][sptSet[u].j + 1].dijkstra.parentj = sptSet[u].j;\r\n                        this.setState({\r\n                            arr: arr2\r\n                        })\r\n                    }\r\n                }\r\n\r\n                if (sptSet[u].i == this.state.endNodei && sptSet[u].j == this.state.endNodej) {\r\n                    this.dijkstraRegisterShortest(0);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    dijkstraRegisterShortest = async (speed) => {\r\n        const { arr, startNodei, startNodej, endNodei, endNodej } = this.state;\r\n        if (arr[endNodei][endNodej].dijkstra.parenti != -1 && arr[endNodei][endNodej].dijkstra.parentj != -1) {\r\n            let i = endNodei;\r\n            let j = endNodej;\r\n            let timerSpeed = Number;\r\n            if (speed == 1) {\r\n                timerSpeed = 200;\r\n            } else if (speed == 2) {\r\n                timerSpeed = 500;\r\n            } else if (speed == 4) {\r\n                timerSpeed = 1\r\n            }\r\n            if (speed != 0) {\r\n                let timer = await setInterval(async () => {\r\n                    let x = arr[i][j].dijkstra.parenti;\r\n                    let y = arr[i][j].dijkstra.parentj;\r\n                    let arr1 = arr;\r\n                    arr1[i][j].dijkstra.shortestPath = true;\r\n                    await this.setState({\r\n                        arr: arr1\r\n                    })\r\n                    i = x;\r\n                    j = y;\r\n                    if (i == startNodei && j == startNodej) {\r\n                        this.setState({\r\n                            disableGridFlag: false\r\n                        })\r\n                        clearInterval(timer);\r\n                    }\r\n                }, timerSpeed);\r\n            } else {\r\n                while (i != startNodei || j != startNodej) {\r\n                    let x = arr[i][j].dijkstra.parenti;\r\n                    let y = arr[i][j].dijkstra.parentj;\r\n                    let arr1 = arr;\r\n                    arr1[i][j].dijkstra.shortestPath = true;\r\n                    await this.setState({\r\n                        arr: arr1\r\n                    })\r\n                    i = x;\r\n                    j = y;\r\n                }\r\n                await this.setState({\r\n                    disableGridFlag: false\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    dijkstraMinDistanceNode = (sptSet) => {\r\n        let min = Number.MAX_SAFE_INTEGER;\r\n        let minInd = -1;\r\n\r\n        for (let i = 0; i < sptSet.length; i++) {\r\n            if (this.state.arr[sptSet[i].i][sptSet[i].j].dijkstra.included == false\r\n                && ((this.state.wallRestrictedSpace.filter(ele => ele.i == sptSet[i].i && ele.j == sptSet[i].j)).length == 0)\r\n                && sptSet[i].distance < min\r\n            ) {\r\n\r\n                min = sptSet[i].distance;\r\n                minInd = i;\r\n            }\r\n        }\r\n        return minInd;\r\n    }\r\n\r\n    returnManhattenDistance = (i, j) => {\r\n        return Math.abs(i - this.state.endNodei) + Math.abs(j - this.state.endNodej);\r\n    }\r\n\r\n    aStarCalculate = async (speed) => {\r\n\r\n        const { arr, startNodei, startNodej } = this.state;\r\n        let sptSet = [];\r\n        arr.forEach((ele, i) => {\r\n            ele.forEach((element, j) => {\r\n                if (i == startNodei && j == startNodej) {\r\n                    sptSet.push({ i, j, distance: 0, fDistance: this.returnManhattenDistance(i, j) })\r\n                } else {\r\n                    sptSet.push({ i, j, distance: Number.MAX_SAFE_INTEGER, fDistance: Number.MAX_SAFE_INTEGER })\r\n                }\r\n            })\r\n        })\r\n\r\n        let v = 0;\r\n\r\n        let timerSpeed = Number;\r\n        if (speed == 1) {\r\n            timerSpeed = 200;\r\n        } else if (speed == 2) {\r\n            timerSpeed = 500;\r\n        } else if (speed == 4) {\r\n            timerSpeed = 1;\r\n        }\r\n        if (speed != 0) {\r\n            let timer = await setInterval(async () => {\r\n                this.setState({\r\n                    disableGridFlag: true\r\n                })\r\n                let u = this.aStarMinDistanceNode(sptSet);\r\n                if (u == -1) {\r\n                    clearInterval(timer);\r\n                    this.setState({\r\n                        disableGridFlag: false\r\n                    })\r\n                    return;\r\n                }\r\n                let arr1 = arr;\r\n                arr1[sptSet[u].i][sptSet[u].j].dijkstra.included = true;\r\n\r\n                await this.setState({\r\n                    arr: arr1\r\n                })\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == sptSet[u].i - 1 && ele.j == sptSet[u].j)).length == 0)\r\n                    && (sptSet[u].i - 1 >= 0 && sptSet[u].i - 1 < 20)\r\n                    && (sptSet[u].j >= 0 && sptSet[u].j < 61\r\n                        && !(arr1[sptSet[u].i - 1][sptSet[u].j].dijkstra.included)\r\n                    )\r\n                ) {\r\n\r\n                    if (sptSet[u].distance + 1 < sptSet[u - 61].distance) {\r\n                        sptSet[u - 61].distance = sptSet[u].distance + 1;\r\n                        sptSet[u - 61].fDistance = sptSet[u].distance + 1 + this.returnManhattenDistance(sptSet[u].i - 1, sptSet[u].j);\r\n                        let arr2 = arr;\r\n                        arr2[sptSet[u].i - 1][sptSet[u].j].dijkstra.parenti = sptSet[u].i;\r\n                        arr2[sptSet[u].i - 1][sptSet[u].j].dijkstra.parentj = sptSet[u].j;\r\n                        await this.setState({\r\n                            arr: arr2\r\n                        })\r\n\r\n                    }\r\n                }\r\n\r\n                // i+1 adjacent\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == sptSet[u].i + 1 && ele.j == sptSet[u].j)).length == 0)\r\n                    && (sptSet[u].i + 1 >= 0 && sptSet[u].i + 1 < 20)\r\n                    && (sptSet[u].j >= 0 && sptSet[u].j < 61\r\n                        && !(arr1[sptSet[u].i + 1][sptSet[u].j].dijkstra.included)\r\n                    )\r\n                ) {\r\n\r\n                    if (sptSet[u].distance + 1 < sptSet[u + 61].distance) {\r\n                        sptSet[u + 61].distance = sptSet[u].distance + 1;\r\n                        sptSet[u + 61].fDistance = sptSet[u].distance + 1 + this.returnManhattenDistance(sptSet[u].i + 1, sptSet[u].j);\r\n                        let arr2 = arr;\r\n                        arr2[sptSet[u].i + 1][sptSet[u].j].dijkstra.parenti = sptSet[u].i;\r\n                        arr2[sptSet[u].i + 1][sptSet[u].j].dijkstra.parentj = sptSet[u].j;\r\n                        await this.setState({\r\n                            arr: arr2\r\n                        })\r\n\r\n                    }\r\n                }\r\n\r\n                // j-1 adjacent\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == sptSet[u].i && ele.j == sptSet[u].j - 1)).length == 0)\r\n                    && (sptSet[u].i >= 0 && sptSet[u].i < 20)\r\n                    && (sptSet[u].j - 1 >= 0 && sptSet[u].j - 1 < 61\r\n                        && !(arr1[sptSet[u].i][sptSet[u].j - 1].dijkstra.included)\r\n                    )\r\n                ) {\r\n\r\n                    if (sptSet[u].distance + 1 < sptSet[u - 1].distance) {\r\n                        sptSet[u - 1].distance = sptSet[u].distance + 1;\r\n                        sptSet[u - 1].fDistance = sptSet[u].distance + 1 + this.returnManhattenDistance(sptSet[u].i, sptSet[u].j - 1);\r\n                        let arr2 = arr;\r\n                        arr2[sptSet[u].i][sptSet[u].j - 1].dijkstra.parenti = sptSet[u].i;\r\n                        arr2[sptSet[u].i][sptSet[u].j - 1].dijkstra.parentj = sptSet[u].j;\r\n                        await this.setState({\r\n                            arr: arr2\r\n                        })\r\n\r\n                    }\r\n                }\r\n\r\n                // j+1 adjacent\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == sptSet[u].i && ele.j == sptSet[u].j + 1)).length == 0)\r\n                    && (sptSet[u].i >= 0 && sptSet[u].i < 20)\r\n                    && (sptSet[u].j + 1 >= 0 && sptSet[u].j + 1 < 61\r\n                        && !(arr1[sptSet[u].i][sptSet[u].j + 1].dijkstra.included)\r\n                    )\r\n                ) {\r\n\r\n                    if (sptSet[u].distance + 1 < sptSet[u + 1].distance) {\r\n                        sptSet[u + 1].distance = sptSet[u].distance + 1;\r\n                        sptSet[u + 1].fDistance = sptSet[u].distance + 1 + this.returnManhattenDistance(sptSet[u].i, sptSet[u].j + 1);\r\n                        let arr2 = arr;\r\n                        arr2[sptSet[u].i][sptSet[u].j + 1].dijkstra.parenti = sptSet[u].i;\r\n                        arr2[sptSet[u].i][sptSet[u].j + 1].dijkstra.parentj = sptSet[u].j;\r\n                        await this.setState({\r\n                            arr: arr2\r\n                        })\r\n\r\n                    }\r\n                }\r\n\r\n                if ((sptSet[u].i == this.state.endNodei && sptSet[u].j == this.state.endNodej)) {\r\n                    this.dijkstraRegisterShortest(speed);\r\n                    clearInterval(timer);\r\n                }\r\n                v++;\r\n\r\n            }, timerSpeed);\r\n        } else {\r\n            for (let i = 0; i < sptSet.length; i++) {\r\n                let u = this.aStarMinDistanceNode(sptSet);\r\n                if (u == -1) {\r\n                    this.setState({\r\n                        disableGridFlag: false\r\n                    })\r\n                    break;\r\n                }\r\n                let arr1 = arr;\r\n                arr1[sptSet[u].i][sptSet[u].j].dijkstra.included = true;\r\n\r\n                this.setState({\r\n                    arr: arr1\r\n                })\r\n\r\n                //i-1 adjacent\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == sptSet[u].i - 1 && ele.j == sptSet[u].j)).length == 0)\r\n                    && (sptSet[u].i - 1 >= 0 && sptSet[u].i - 1 < 20)\r\n                    && (sptSet[u].j >= 0 && sptSet[u].j < 61\r\n                        && !(arr1[sptSet[u].i - 1][sptSet[u].j].dijkstra.included)\r\n                    )\r\n                ) {\r\n                    if (sptSet[u].distance + 1 < sptSet[u - 61].distance) {\r\n                        sptSet[u - 61].distance = sptSet[u].distance + 1;\r\n                        sptSet[u - 61].fDistance = sptSet[u].distance + 1 + this.returnManhattenDistance(sptSet[u].i - 1, sptSet[u].j);\r\n                        let arr2 = arr;\r\n                        arr2[sptSet[u].i - 1][sptSet[u].j].dijkstra.parenti = sptSet[u].i;\r\n                        arr2[sptSet[u].i - 1][sptSet[u].j].dijkstra.parentj = sptSet[u].j;\r\n                        this.setState({\r\n                            arr: arr2\r\n                        })\r\n                    }\r\n                }\r\n\r\n                // i+1 adjacent\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == sptSet[u].i + 1 && ele.j == sptSet[u].j)).length == 0)\r\n                    && (sptSet[u].i + 1 >= 0 && sptSet[u].i + 1 < 20)\r\n                    && (sptSet[u].j >= 0 && sptSet[u].j < 61\r\n                        && !(arr1[sptSet[u].i + 1][sptSet[u].j].dijkstra.included)\r\n                    )\r\n                ) {\r\n                    if (sptSet[u].distance + 1 < sptSet[u + 61].distance) {\r\n                        sptSet[u + 61].distance = sptSet[u].distance + 1;\r\n                        sptSet[u + 61].fDistance = sptSet[u].distance + 1 + this.returnManhattenDistance(sptSet[u].i + 1, sptSet[u].j);\r\n                        let arr2 = arr;\r\n                        arr2[sptSet[u].i + 1][sptSet[u].j].dijkstra.parenti = sptSet[u].i;\r\n                        arr2[sptSet[u].i + 1][sptSet[u].j].dijkstra.parentj = sptSet[u].j;\r\n                        this.setState({\r\n                            arr: arr2\r\n                        })\r\n                    }\r\n                }\r\n\r\n                // j-1 adjacent\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == sptSet[u].i && ele.j == sptSet[u].j - 1)).length == 0)\r\n                    && (sptSet[u].i >= 0 && sptSet[u].i < 20)\r\n                    && (sptSet[u].j - 1 >= 0 && sptSet[u].j - 1 < 61\r\n                        && !(arr1[sptSet[u].i][sptSet[u].j - 1].dijkstra.included)\r\n                    )\r\n                ) {\r\n                    if (sptSet[u].distance + 1 < sptSet[u - 1].distance) {\r\n                        sptSet[u - 1].distance = sptSet[u].distance + 1;\r\n                        sptSet[u - 1].fDistance = sptSet[u].distance + 1 + this.returnManhattenDistance(sptSet[u].i, sptSet[u].j - 1);\r\n                        let arr2 = arr;\r\n                        arr2[sptSet[u].i][sptSet[u].j - 1].dijkstra.parenti = sptSet[u].i;\r\n                        arr2[sptSet[u].i][sptSet[u].j - 1].dijkstra.parentj = sptSet[u].j;\r\n                        this.setState({\r\n                            arr: arr2\r\n                        })\r\n                    }\r\n                }\r\n\r\n                // j+1 adjacent\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == sptSet[u].i && ele.j == sptSet[u].j + 1)).length == 0)\r\n                    && (sptSet[u].i >= 0 && sptSet[u].i < 20)\r\n                    && (sptSet[u].j + 1 >= 0 && sptSet[u].j + 1 < 61\r\n                        && !(arr1[sptSet[u].i][sptSet[u].j + 1].dijkstra.included)\r\n                    )\r\n                ) {\r\n                    if (sptSet[u].distance + 1 < sptSet[u + 1].distance) {\r\n                        sptSet[u + 1].distance = sptSet[u].distance + 1;\r\n                        sptSet[u + 1].fDistance = sptSet[u].distance + 1 + this.returnManhattenDistance(sptSet[u].i, sptSet[u].j + 1);\r\n                        let arr2 = arr;\r\n                        arr2[sptSet[u].i][sptSet[u].j + 1].dijkstra.parenti = sptSet[u].i;\r\n                        arr2[sptSet[u].i][sptSet[u].j + 1].dijkstra.parentj = sptSet[u].j;\r\n                        this.setState({\r\n                            arr: arr2\r\n                        })\r\n                    }\r\n                }\r\n\r\n                if (sptSet[u].i == this.state.endNodei && sptSet[u].j == this.state.endNodej) {\r\n                    this.dijkstraRegisterShortest(0);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    bestFirstSearchCalculate = async (speed) => {\r\n\r\n        const { arr, startNodei, startNodej } = this.state;\r\n        let sptSet = [];\r\n        arr.forEach((ele, i) => {\r\n            ele.forEach((element, j) => {\r\n                if (i == startNodei && j == startNodej) {\r\n                    sptSet.push({ i, j, fDistance: this.returnManhattenDistance(i, j) })\r\n                } else {\r\n                    sptSet.push({ i, j, fDistance: Number.MAX_SAFE_INTEGER })\r\n                }\r\n            })\r\n        })\r\n\r\n        let v = 0;\r\n\r\n        let timerSpeed = Number;\r\n        if (speed == 1) {\r\n            timerSpeed = 200;\r\n        } else if (speed == 2) {\r\n            timerSpeed = 500;\r\n        } else if (speed == 4) {\r\n            timerSpeed = 1;\r\n        }\r\n        if (speed != 0) {\r\n            let timer = await setInterval(async () => {\r\n                this.setState({\r\n                    disableGridFlag: true\r\n                })\r\n                let u = this.aStarMinDistanceNode(sptSet);\r\n                if (u == -1) {\r\n                    clearInterval(timer);\r\n                    this.setState({\r\n                        disableGridFlag: false\r\n                    })\r\n                    return;\r\n                }\r\n                let arr1 = arr;\r\n                arr1[sptSet[u].i][sptSet[u].j].dijkstra.included = true;\r\n\r\n                await this.setState({\r\n                    arr: arr1\r\n                })\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == sptSet[u].i - 1 && ele.j == sptSet[u].j)).length == 0)\r\n                    && (sptSet[u].i - 1 >= 0 && sptSet[u].i - 1 < 20)\r\n                    && (sptSet[u].j >= 0 && sptSet[u].j < 61\r\n                        && !(arr1[sptSet[u].i - 1][sptSet[u].j].dijkstra.included)\r\n                    )\r\n                ) {\r\n\r\n                    if (sptSet[u].fDistance < sptSet[u - 61].fDistance) {\r\n                        sptSet[u - 61].fDistance = this.returnManhattenDistance(sptSet[u].i - 1, sptSet[u].j);\r\n                        let arr2 = arr;\r\n                        arr2[sptSet[u].i - 1][sptSet[u].j].dijkstra.parenti = sptSet[u].i;\r\n                        arr2[sptSet[u].i - 1][sptSet[u].j].dijkstra.parentj = sptSet[u].j;\r\n                        await this.setState({\r\n                            arr: arr2\r\n                        })\r\n\r\n                    }\r\n                }\r\n\r\n                // i+1 adjacent\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == sptSet[u].i + 1 && ele.j == sptSet[u].j)).length == 0)\r\n                    && (sptSet[u].i + 1 >= 0 && sptSet[u].i + 1 < 20)\r\n                    && (sptSet[u].j >= 0 && sptSet[u].j < 61\r\n                        && !(arr1[sptSet[u].i + 1][sptSet[u].j].dijkstra.included)\r\n                    )\r\n                ) {\r\n\r\n                    if (sptSet[u].fDistance < sptSet[u + 61].fDistance) {\r\n                        sptSet[u + 61].fDistance = this.returnManhattenDistance(sptSet[u].i + 1, sptSet[u].j);\r\n                        let arr2 = arr;\r\n                        arr2[sptSet[u].i + 1][sptSet[u].j].dijkstra.parenti = sptSet[u].i;\r\n                        arr2[sptSet[u].i + 1][sptSet[u].j].dijkstra.parentj = sptSet[u].j;\r\n                        await this.setState({\r\n                            arr: arr2\r\n                        })\r\n\r\n                    }\r\n                }\r\n\r\n                // j-1 adjacent\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == sptSet[u].i && ele.j == sptSet[u].j - 1)).length == 0)\r\n                    && (sptSet[u].i >= 0 && sptSet[u].i < 20)\r\n                    && (sptSet[u].j - 1 >= 0 && sptSet[u].j - 1 < 61\r\n                        && !(arr1[sptSet[u].i][sptSet[u].j - 1].dijkstra.included)\r\n                    )\r\n                ) {\r\n\r\n                    if (sptSet[u].fDistance < sptSet[u - 1].fDistance) {\r\n                        sptSet[u - 1].fDistance = this.returnManhattenDistance(sptSet[u].i, sptSet[u].j - 1);\r\n                        let arr2 = arr;\r\n                        arr2[sptSet[u].i][sptSet[u].j - 1].dijkstra.parenti = sptSet[u].i;\r\n                        arr2[sptSet[u].i][sptSet[u].j - 1].dijkstra.parentj = sptSet[u].j;\r\n                        await this.setState({\r\n                            arr: arr2\r\n                        })\r\n\r\n                    }\r\n                }\r\n\r\n                // j+1 adjacent\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == sptSet[u].i && ele.j == sptSet[u].j + 1)).length == 0)\r\n                    && (sptSet[u].i >= 0 && sptSet[u].i < 20)\r\n                    && (sptSet[u].j + 1 >= 0 && sptSet[u].j + 1 < 61\r\n                        && !(arr1[sptSet[u].i][sptSet[u].j + 1].dijkstra.included)\r\n                    )\r\n                ) {\r\n\r\n                    if (sptSet[u].fDistance < sptSet[u + 1].fDistance) {\r\n                        sptSet[u + 1].fDistance = this.returnManhattenDistance(sptSet[u].i, sptSet[u].j + 1);\r\n                        let arr2 = arr;\r\n                        arr2[sptSet[u].i][sptSet[u].j + 1].dijkstra.parenti = sptSet[u].i;\r\n                        arr2[sptSet[u].i][sptSet[u].j + 1].dijkstra.parentj = sptSet[u].j;\r\n                        await this.setState({\r\n                            arr: arr2\r\n                        })\r\n\r\n                    }\r\n                }\r\n\r\n                if ((sptSet[u].i == this.state.endNodei && sptSet[u].j == this.state.endNodej)) {\r\n                    this.dijkstraRegisterShortest(speed);\r\n                    clearInterval(timer);\r\n                }\r\n                v++;\r\n\r\n            }, timerSpeed);\r\n        } else {\r\n            for (let i = 0; i < sptSet.length; i++) {\r\n                let u = this.aStarMinDistanceNode(sptSet);\r\n                if (u == -1) {\r\n                    this.setState({\r\n                        disableGridFlag: false\r\n                    })\r\n                    break;\r\n                }\r\n                let arr1 = arr;\r\n                arr1[sptSet[u].i][sptSet[u].j].dijkstra.included = true;\r\n\r\n                this.setState({\r\n                    arr: arr1\r\n                })\r\n\r\n                //i-1 adjacent\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == sptSet[u].i - 1 && ele.j == sptSet[u].j)).length == 0)\r\n                    && (sptSet[u].i - 1 >= 0 && sptSet[u].i - 1 < 20)\r\n                    && (sptSet[u].j >= 0 && sptSet[u].j < 61\r\n                        && !(arr1[sptSet[u].i - 1][sptSet[u].j].dijkstra.included)\r\n                    )\r\n                ) {\r\n                    if (sptSet[u].fDistance < sptSet[u - 61].fDistance) {\r\n                        sptSet[u - 61].fDistance = this.returnManhattenDistance(sptSet[u].i - 1, sptSet[u].j);\r\n                        let arr2 = arr;\r\n                        arr2[sptSet[u].i - 1][sptSet[u].j].dijkstra.parenti = sptSet[u].i;\r\n                        arr2[sptSet[u].i - 1][sptSet[u].j].dijkstra.parentj = sptSet[u].j;\r\n                        this.setState({\r\n                            arr: arr2\r\n                        })\r\n                    }\r\n                }\r\n\r\n                // i+1 adjacent\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == sptSet[u].i + 1 && ele.j == sptSet[u].j)).length == 0)\r\n                    && (sptSet[u].i + 1 >= 0 && sptSet[u].i + 1 < 20)\r\n                    && (sptSet[u].j >= 0 && sptSet[u].j < 61\r\n                        && !(arr1[sptSet[u].i + 1][sptSet[u].j].dijkstra.included)\r\n                    )\r\n                ) {\r\n                    if (sptSet[u].fDistance < sptSet[u + 61].fDistance) {\r\n                        sptSet[u + 61].fDistance = this.returnManhattenDistance(sptSet[u].i + 1, sptSet[u].j);\r\n                        let arr2 = arr;\r\n                        arr2[sptSet[u].i + 1][sptSet[u].j].dijkstra.parenti = sptSet[u].i;\r\n                        arr2[sptSet[u].i + 1][sptSet[u].j].dijkstra.parentj = sptSet[u].j;\r\n                        this.setState({\r\n                            arr: arr2\r\n                        })\r\n                    }\r\n                }\r\n\r\n                // j-1 adjacent\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == sptSet[u].i && ele.j == sptSet[u].j - 1)).length == 0)\r\n                    && (sptSet[u].i >= 0 && sptSet[u].i < 20)\r\n                    && (sptSet[u].j - 1 >= 0 && sptSet[u].j - 1 < 61\r\n                        && !(arr1[sptSet[u].i][sptSet[u].j - 1].dijkstra.included)\r\n                    )\r\n                ) {\r\n                    if (sptSet[u].fDistance < sptSet[u - 1].fDistance) {\r\n                        sptSet[u - 1].fDistance = this.returnManhattenDistance(sptSet[u].i, sptSet[u].j - 1);\r\n                        let arr2 = arr;\r\n                        arr2[sptSet[u].i][sptSet[u].j - 1].dijkstra.parenti = sptSet[u].i;\r\n                        arr2[sptSet[u].i][sptSet[u].j - 1].dijkstra.parentj = sptSet[u].j;\r\n                        this.setState({\r\n                            arr: arr2\r\n                        })\r\n                    }\r\n                }\r\n\r\n                // j+1 adjacent\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == sptSet[u].i && ele.j == sptSet[u].j + 1)).length == 0)\r\n                    && (sptSet[u].i >= 0 && sptSet[u].i < 20)\r\n                    && (sptSet[u].j + 1 >= 0 && sptSet[u].j + 1 < 61\r\n                        && !(arr1[sptSet[u].i][sptSet[u].j + 1].dijkstra.included)\r\n                    )\r\n                ) {\r\n                    if (sptSet[u].fDistance < sptSet[u + 1].fDistance) {\r\n                        sptSet[u + 1].fDistance = this.returnManhattenDistance(sptSet[u].i, sptSet[u].j + 1);\r\n                        let arr2 = arr;\r\n                        arr2[sptSet[u].i][sptSet[u].j + 1].dijkstra.parenti = sptSet[u].i;\r\n                        arr2[sptSet[u].i][sptSet[u].j + 1].dijkstra.parentj = sptSet[u].j;\r\n                        this.setState({\r\n                            arr: arr2\r\n                        })\r\n                    }\r\n                }\r\n\r\n                if (sptSet[u].i == this.state.endNodei && sptSet[u].j == this.state.endNodej) {\r\n                    this.dijkstraRegisterShortest(0);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    aStarMinDistanceNode = (sptSet) => {\r\n        let min = Number.MAX_SAFE_INTEGER;\r\n        let minInd = -1;\r\n\r\n        for (let i = 0; i < sptSet.length; i++) {\r\n            if (this.state.arr[sptSet[i].i][sptSet[i].j].dijkstra.included == false\r\n                && ((this.state.wallRestrictedSpace.filter(ele => ele.i == sptSet[i].i && ele.j == sptSet[i].j)).length == 0)\r\n                && sptSet[i].fDistance < min\r\n            ) {\r\n\r\n                min = sptSet[i].fDistance;\r\n                minInd = i;\r\n            }\r\n        }\r\n        return minInd;\r\n    }\r\n\r\n    dfsCalculate = async (speed) => {\r\n        const { arr, startNodei, startNodej } = this.state;\r\n        // this.dfsRecursiveCalculate(this.state.startNodei, this.state.startNodej);\r\n        let stack = [];\r\n        stack.push({ i: this.state.startNodei, j: this.state.startNodej });\r\n        let arr1 = arr;\r\n        arr1[stack[stack.length - 1].i][stack[stack.length - 1].j].dijkstra.included = true;\r\n        this.setState({\r\n            arr: arr1\r\n        })\r\n        if (speed == 0) {\r\n            while (stack.length != 0) {\r\n                let adjacent = this.dfsAdjacentNodes(stack[stack.length - 1].i, stack[stack.length - 1].j);\r\n                if (adjacent.i != -1 && adjacent.j != -1) {\r\n                    stack.push({ i: adjacent.i, j: adjacent.j });\r\n                    let arr1 = arr;\r\n                    arr1[stack[stack.length - 1].i][stack[stack.length - 1].j].dijkstra.included = true;\r\n                    this.setState({\r\n                        arr: arr1\r\n                    })\r\n                } else {\r\n                    stack.pop();\r\n                }\r\n                if (stack[stack.length - 1].i == this.state.startNodei && stack[stack.length - 1].j == this.state.startNodej) {\r\n                    break;\r\n                } else if (stack[stack.length - 1].i == this.state.endNodei && stack[stack.length - 1].j == this.state.endNodej) {\r\n                    while (stack.length != 0) {\r\n                        let arr1 = arr;\r\n                        arr1[stack[stack.length - 1].i][stack[stack.length - 1].j].dijkstra.shortestPath = true;\r\n                        this.setState({\r\n                            arr: arr1\r\n                        })\r\n                        stack.pop();\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n        } else {\r\n            let timerSpeed = Number;\r\n            if (speed == 1) {\r\n                timerSpeed = 200;\r\n            } else if (speed == 2) {\r\n                timerSpeed = 500;\r\n            } else if (speed == 4) {\r\n                timerSpeed = 1;\r\n            }\r\n\r\n            let timer = await setInterval(async () => {\r\n                this.setState({\r\n                    disableGridFlag: true\r\n                })\r\n                let adjacent = this.dfsAdjacentNodes(stack[stack.length - 1].i, stack[stack.length - 1].j);\r\n                if (adjacent.i != -1 && adjacent.j != -1) {\r\n                    stack.push({ i: adjacent.i, j: adjacent.j });\r\n                    let arr1 = arr;\r\n                    arr1[stack[stack.length - 1].i][stack[stack.length - 1].j].dijkstra.included = true;\r\n                    this.setState({\r\n                        arr: arr1\r\n                    })\r\n                } else {\r\n                    stack.pop();\r\n                }\r\n                if (stack[stack.length - 1].i == this.state.startNodei && stack[stack.length - 1].j == this.state.startNodej) {\r\n                    clearInterval(timer);\r\n                    this.setState({\r\n                        disableGridFlag: false\r\n                    })\r\n                    return;\r\n                } else if (stack[stack.length - 1].i == this.state.endNodei && stack[stack.length - 1].j == this.state.endNodej) {\r\n                    // while(stack.length!=0){\r\n                    //     let arr1 = arr;\r\n                    //     arr1[stack[stack.length-1].i][stack[stack.length-1].j].dijkstra.shortestPath = true;\r\n                    //     this.setState({\r\n                    //         arr: arr1\r\n                    //     })\r\n                    //     stack.pop();\r\n                    // }\r\n                    this.dfsRegisterPath(stack, timerSpeed);\r\n                    clearInterval(timer);\r\n                }\r\n\r\n            }, timerSpeed)\r\n        }\r\n    }\r\n\r\n    dfsRegisterPath = async (stack, timerSpeed) => {\r\n        const { arr } = this.state;\r\n        let timer = await setInterval(async () => {\r\n            let arr1 = arr;\r\n            arr1[stack[stack.length - 1].i][stack[stack.length - 1].j].dijkstra.shortestPath = true;\r\n            this.setState({\r\n                arr: arr1\r\n            })\r\n            stack.pop();\r\n            if (stack.length == 1) {\r\n                this.setState({\r\n                    disableGridFlag: false\r\n                })\r\n                clearInterval(timer);\r\n            }\r\n        }, timerSpeed);\r\n    }\r\n\r\n    dfsAdjacentNodes = (i, j) => {\r\n        const { arr, startNodei, startNodej } = this.state;\r\n        let tempi = -1;\r\n        let tempj = -1;\r\n\r\n        //i-1\r\n        if ((tempi == -1 && tempj == -1) && ((this.state.wallRestrictedSpace.filter(ele => ele.i == i - 1 && ele.j == j)).length == 0)\r\n            && (i - 1 >= 0 && i - 1 < 20)\r\n            && (j >= 0 && j < 61\r\n                && !(arr[i - 1][j].dijkstra.included)\r\n            )\r\n        ) {\r\n            tempi = i - 1;\r\n            tempj = j;\r\n        }\r\n\r\n        //j+1\r\n        if ((tempi == -1 && tempj == -1) && ((this.state.wallRestrictedSpace.filter(ele => ele.i == i && ele.j == j + 1)).length == 0)\r\n            && (i >= 0 && i < 20)\r\n            && (j + 1 >= 0 && j + 1 < 61\r\n                && !(arr[i][j + 1].dijkstra.included)\r\n            )\r\n        ) {\r\n            tempi = i;\r\n            tempj = j + 1;\r\n        }\r\n\r\n        //i+1\r\n        if ((tempi == -1 && tempj == -1) && ((this.state.wallRestrictedSpace.filter(ele => ele.i == i + 1 && ele.j == j)).length == 0)\r\n            && (i + 1 >= 0 && i + 1 < 20)\r\n            && (j >= 0 && j < 61\r\n                && !(arr[i + 1][j].dijkstra.included)\r\n            )\r\n        ) {\r\n            tempi = i + 1;\r\n            tempj = j;\r\n        }\r\n\r\n        //j-1\r\n        if ((tempi == -1 && tempj == -1) && ((this.state.wallRestrictedSpace.filter(ele => ele.i == i && ele.j == j - 1)).length == 0)\r\n            && (i >= 0 && i < 20)\r\n            && (j - 1 >= 0 && j - 1 < 61\r\n                && !(arr[i][j - 1].dijkstra.included)\r\n            )\r\n        ) {\r\n            tempi = i;\r\n            tempj = j - 1;\r\n        }\r\n\r\n        return { i: tempi, j: tempj };\r\n    }\r\n\r\n    bfsCalculate = async (speed) => {\r\n        const { arr, startNodei, startNodej } = this.state;\r\n\r\n        let queue = [];\r\n        queue.push({ i: this.state.startNodei, j: this.state.startNodej });\r\n        let arr1 = arr;\r\n        arr1[queue[0].i][queue[0].j].dijkstra.included = true;\r\n        this.setState({\r\n            arr: arr1\r\n        })\r\n        if (speed == 0) {\r\n            while (queue.length != 0) {\r\n                //i-1\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == queue[0].i - 1 && ele.j == queue[0].j)).length == 0)\r\n                    && (queue[0].i - 1 >= 0 && queue[0].i - 1 < 20)\r\n                    && (queue[0].j >= 0 && queue[0].j < 61\r\n                        && !(arr[queue[0].i - 1][queue[0].j].dijkstra.included)\r\n                    )\r\n                ) {\r\n                    let arr2 = arr;\r\n                    arr2[queue[0].i - 1][queue[0].j].dijkstra.parenti = queue[0].i;\r\n                    arr2[queue[0].i - 1][queue[0].j].dijkstra.parentj = queue[0].j;\r\n                    queue.push({ i: queue[0].i - 1, j: queue[0].j });\r\n                    arr2[queue[0].i - 1][queue[0].j].dijkstra.included = true;\r\n                    this.setState({\r\n                        arr: arr2\r\n                    })\r\n                    if (queue[queue.length - 1].i == this.state.endNodei && queue[queue.length - 1].j == this.state.endNodej) {\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                // i+1 adjacent\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == queue[0].i + 1 && ele.j == queue[0].j)).length == 0)\r\n                    && (queue[0].i + 1 >= 0 && queue[0].i + 1 < 20)\r\n                    && (queue[0].j >= 0 && queue[0].j < 61\r\n                        && !(arr[queue[0].i + 1][queue[0].j].dijkstra.included)\r\n                    )\r\n                ) {\r\n                    let arr2 = arr;\r\n                    arr2[queue[0].i + 1][queue[0].j].dijkstra.parenti = queue[0].i;\r\n                    arr2[queue[0].i + 1][queue[0].j].dijkstra.parentj = queue[0].j;\r\n                    queue.push({ i: queue[0].i + 1, j: queue[0].j });\r\n                    arr2[queue[0].i + 1][queue[0].j].dijkstra.included = true;\r\n                    this.setState({\r\n                        arr: arr2\r\n                    })\r\n                    if (queue[queue.length - 1].i == this.state.endNodei && queue[queue.length - 1].j == this.state.endNodej) {\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                // j-1 adjacent\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == queue[0].i && ele.j == queue[0].j - 1)).length == 0)\r\n                    && (queue[0].i >= 0 && queue[0].i < 20)\r\n                    && (queue[0].j - 1 >= 0 && queue[0].j - 1 < 61\r\n                        && !(arr[queue[0].i][queue[0].j - 1].dijkstra.included)\r\n                    )\r\n                ) {\r\n                    let arr2 = arr;\r\n                    arr2[queue[0].i][queue[0].j - 1].dijkstra.parenti = queue[0].i;\r\n                    arr2[queue[0].i][queue[0].j - 1].dijkstra.parentj = queue[0].j;\r\n                    queue.push({ i: queue[0].i, j: queue[0].j - 1 });\r\n                    arr2[queue[0].i][queue[0].j - 1].dijkstra.included = true;\r\n                    this.setState({\r\n                        arr: arr2\r\n                    })\r\n                    if (queue[queue.length - 1].i == this.state.endNodei && queue[queue.length - 1].j == this.state.endNodej) {\r\n                        break;\r\n                    }\r\n                }\r\n                // j+1 adjacent\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == queue[0].i && ele.j == queue[0].j + 1)).length == 0)\r\n                    && (queue[0].i >= 0 && queue[0].i < 20)\r\n                    && (queue[0].j + 1 >= 0 && queue[0].j + 1 < 61\r\n                        && !(arr[queue[0].i][queue[0].j + 1].dijkstra.included)\r\n                    )\r\n                ) {\r\n                    let arr2 = arr;\r\n                    arr2[queue[0].i][queue[0].j + 1].dijkstra.parenti = queue[0].i;\r\n                    arr2[queue[0].i][queue[0].j + 1].dijkstra.parentj = queue[0].j;\r\n                    queue.push({ i: queue[0].i, j: queue[0].j + 1 });\r\n                    arr2[queue[0].i][queue[0].j + 1].dijkstra.included = true;\r\n                    this.setState({\r\n                        arr: arr2\r\n                    })\r\n                    if (queue[queue.length - 1].i == this.state.endNodei && queue[queue.length - 1].j == this.state.endNodej) {\r\n                        break;\r\n                    }\r\n                }\r\n                queue.shift();\r\n            }\r\n\r\n            if (arr[this.state.endNodei][this.state.endNodej].dijkstra.parenti != -1 && arr[this.state.endNodei][this.state.endNodej].dijkstra.parentj != -1) {\r\n                let i = this.state.endNodei;\r\n                let j = this.state.endNodej;\r\n                while (i != startNodei || j != startNodej) {\r\n                    let x = arr[i][j].dijkstra.parenti;\r\n                    let y = arr[i][j].dijkstra.parentj;\r\n                    let arr1 = arr;\r\n                    arr1[i][j].dijkstra.shortestPath = true;\r\n                    this.setState({\r\n                        arr: arr1\r\n                    })\r\n                    i = x;\r\n                    j = y;\r\n                }\r\n            }\r\n        } else {\r\n            let timerSpeed = Number;\r\n            if (speed == 1) {\r\n                timerSpeed = 200;\r\n            } else if (speed == 2) {\r\n                timerSpeed = 500;\r\n            } else if (speed == 4) {\r\n                timerSpeed = 1;\r\n            }\r\n            let timer = await setInterval(async () => {\r\n                this.setState({\r\n                    disableGridFlag: true\r\n                })\r\n\r\n                if (queue.length == 0) {\r\n                    clearInterval(timer);\r\n                    this.setState({\r\n                        disableGridFlag: false\r\n                    })\r\n                    return;\r\n                }\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == queue[0].i - 1 && ele.j == queue[0].j)).length == 0)\r\n                    && (queue[0].i - 1 >= 0 && queue[0].i - 1 < 20)\r\n                    && (queue[0].j >= 0 && queue[0].j < 61\r\n                        && !(arr[queue[0].i - 1][queue[0].j].dijkstra.included)\r\n                    )\r\n                ) {\r\n                    let arr2 = arr;\r\n                    arr2[queue[0].i - 1][queue[0].j].dijkstra.parenti = queue[0].i;\r\n                    arr2[queue[0].i - 1][queue[0].j].dijkstra.parentj = queue[0].j;\r\n                    queue.push({ i: queue[0].i - 1, j: queue[0].j });\r\n                    arr2[queue[0].i - 1][queue[0].j].dijkstra.included = true;\r\n                    this.setState({\r\n                        arr: arr2\r\n                    })\r\n                    if (queue[queue.length - 1].i == this.state.endNodei && queue[queue.length - 1].j == this.state.endNodej) {\r\n                        this.bfsRegisterShortest(timerSpeed);\r\n                        clearInterval(timer);\r\n                    }\r\n                }\r\n\r\n                // i+1 adjacent\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == queue[0].i + 1 && ele.j == queue[0].j)).length == 0)\r\n                    && (queue[0].i + 1 >= 0 && queue[0].i + 1 < 20)\r\n                    && (queue[0].j >= 0 && queue[0].j < 61\r\n                        && !(arr[queue[0].i + 1][queue[0].j].dijkstra.included)\r\n                    )\r\n                ) {\r\n                    let arr2 = arr;\r\n                    arr2[queue[0].i + 1][queue[0].j].dijkstra.parenti = queue[0].i;\r\n                    arr2[queue[0].i + 1][queue[0].j].dijkstra.parentj = queue[0].j;\r\n                    queue.push({ i: queue[0].i + 1, j: queue[0].j });\r\n                    arr2[queue[0].i + 1][queue[0].j].dijkstra.included = true;\r\n                    this.setState({\r\n                        arr: arr2\r\n                    })\r\n                    if (queue[queue.length - 1].i == this.state.endNodei && queue[queue.length - 1].j == this.state.endNodej) {\r\n                        this.bfsRegisterShortest(timerSpeed);\r\n                        clearInterval(timer);\r\n                    }\r\n                }\r\n\r\n                // j-1 adjacent\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == queue[0].i && ele.j == queue[0].j - 1)).length == 0)\r\n                    && (queue[0].i >= 0 && queue[0].i < 20)\r\n                    && (queue[0].j - 1 >= 0 && queue[0].j - 1 < 61\r\n                        && !(arr[queue[0].i][queue[0].j - 1].dijkstra.included)\r\n                    )\r\n                ) {\r\n                    let arr2 = arr;\r\n                    arr2[queue[0].i][queue[0].j - 1].dijkstra.parenti = queue[0].i;\r\n                    arr2[queue[0].i][queue[0].j - 1].dijkstra.parentj = queue[0].j;\r\n                    queue.push({ i: queue[0].i, j: queue[0].j - 1 });\r\n                    arr2[queue[0].i][queue[0].j - 1].dijkstra.included = true;\r\n                    this.setState({\r\n                        arr: arr2\r\n                    })\r\n                    if (queue[queue.length - 1].i == this.state.endNodei && queue[queue.length - 1].j == this.state.endNodej) {\r\n                        this.bfsRegisterShortest(timerSpeed);\r\n                        clearInterval(timer);\r\n                    }\r\n                }\r\n                // j+1 adjacent\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == queue[0].i && ele.j == queue[0].j + 1)).length == 0)\r\n                    && (queue[0].i >= 0 && queue[0].i < 20)\r\n                    && (queue[0].j + 1 >= 0 && queue[0].j + 1 < 61\r\n                        && !(arr[queue[0].i][queue[0].j + 1].dijkstra.included)\r\n                    )\r\n                ) {\r\n                    let arr2 = arr;\r\n                    arr2[queue[0].i][queue[0].j + 1].dijkstra.parenti = queue[0].i;\r\n                    arr2[queue[0].i][queue[0].j + 1].dijkstra.parentj = queue[0].j;\r\n                    queue.push({ i: queue[0].i, j: queue[0].j + 1 });\r\n                    arr2[queue[0].i][queue[0].j + 1].dijkstra.included = true;\r\n                    this.setState({\r\n                        arr: arr2\r\n                    })\r\n                    if (queue[queue.length - 1].i == this.state.endNodei && queue[queue.length - 1].j == this.state.endNodej) {\r\n                        this.bfsRegisterShortest(timerSpeed);\r\n                        clearInterval(timer);\r\n                    }\r\n                }\r\n                queue.shift();\r\n            }, timerSpeed);\r\n        }\r\n    }\r\n\r\n    bfsRegisterShortest = async (timerSpeed) => {\r\n        const { arr, startNodei, startNodej, endNodei, endNodej } = this.state;\r\n        let i = endNodei;\r\n        let j = endNodej;\r\n        let timer = await setInterval(async () => {\r\n            let x = arr[i][j].dijkstra.parenti;\r\n            let y = arr[i][j].dijkstra.parentj;\r\n            let arr1 = arr;\r\n            arr1[i][j].dijkstra.shortestPath = true;\r\n            await this.setState({\r\n                arr: arr1\r\n            })\r\n            i = x;\r\n            j = y;\r\n            if (i == startNodei && j == startNodej) {\r\n                this.setState({\r\n                    disableGridFlag: false\r\n                })\r\n                clearInterval(timer);\r\n            }\r\n        }, timerSpeed);\r\n    }\r\n\r\n\r\n    render() {\r\n        const { startNodei, startNodej, endNodei, endNodej, arr } = this.state;\r\n        return (\r\n            <div className={this.state.disableGridFlag ? \"disableGrid\" : \"enableGrid\"}>\r\n                <div className=\"headerClass\"><Header algorithmSelect={this.algorithmSelect} mazeSelect={this.mazeSelect} calculate={this.calculate} clearGrid={this.clearGrid} clearPath={this.clearPath} /></div>\r\n                <div className=\"bodyHeader\">\r\n                    <ul>\r\n                        <li>Source Node <FaHiking /></li>\r\n                        <li>Destination Node <FaArchway /></li>\r\n                        <li style={{ marginTop: 'auto' }}>Unvisited Node <div className=\"unvisited\"></div></li>\r\n                        <li style={{ marginTop: 'auto' }}>Visited Node <div className=\"visited\"></div></li>\r\n                        <li style={{ marginTop: 'auto' }}>Shortest Path Node <div className=\"shortestPath\"></div></li>\r\n                        <li style={{ marginTop: 'auto' }}>Obstacle Node <div className=\"obstacle\"></div></li>\r\n                    </ul>\r\n                    <div style={this.state.selectedAlgorithm == \"\" ? { display: \"block\" } : { display: \"none\" }} className=\"alignClass\">Select an algorithm to find the path!</div>\r\n                    <div style={this.state.selectedAlgorithm == \"dijkstra\" ? { display: \"block\" } : { display: \"none\" }} className=\"alignClass\">Dijkstra Algorithm is a weighted greedy algorithm which guarantees a shortest path with a time complexity of O(V^2) when represented using adjacency matrix and O(E logV) when represented using adjacency list.</div>\r\n                    <div style={this.state.selectedAlgorithm == \"A*\" ? { display: \"block\" } : { display: \"none\" }} className=\"alignClass\">A* Search Algorithm is a weighted greedy algorithm which is an extension to Dijkshtra's algorithm aiming at optimizing its performance by the use of heuristics, it guarantees a shortest path!</div>\r\n                    <div style={this.state.selectedAlgorithm == \"dfs\" ? { display: \"block\" } : { display: \"none\" }} className=\"alignClass\">Depth-First Search is an unweighted algorithm which starts at the root node and explores as far as possible along each branch before backtracking, it does not guarantee a shortest path!</div>\r\n                    <div style={this.state.selectedAlgorithm == \"bfs\" ? { display: \"block\" } : { display: \"none\" }} className=\"alignClass\">Breadth-First Search is an unweighted algorithm which uses the opposite strategy as depth-first strategy to guarantee a shortest path!</div>\r\n                    <div style={this.state.selectedAlgorithm == \"bestFsearch\" ? { display: \"block\" } : { display: \"none\" }} className=\"alignClass\">Best First Search is a greedy weighted search algorithm that is a pure heuristic search which attempts to find a solution by predicting how close the end of a path is to a solution, it does not guarantee a shortest path!</div>\r\n                    <table>\r\n                        <tbody>\r\n                            {arr.map((ele, i) => (\r\n                                <tr key={i}>\r\n                                    {ele.map((ele, j) => (\r\n                                        <td\r\n                                            key={j}\r\n                                            onDragOver={(event) => this.allowDrop(event, i, j)}\r\n                                            onDrop={(event) => this.drop(event, i, j)}\r\n                                            onDoubleClick={(event) => this.doubleClickHandler(event, i, j)}\r\n                                            onClick={(event) => this.clickHandler(event, i, j)}\r\n                                            onMouseEnter={(event) => this.mouseMoveHandler(event, i, j)}\r\n                                            style={arr[i][j].dijkstra.included ? (arr[i][j].dijkstra.shortestPath ? { backgroundColor: \"green\" } : { backgroundColor: \"yellow\" }) : ele.style}\r\n                                        >\r\n                                            {i == startNodei && j == startNodej &&\r\n                                                <div onDragStart={(event) => this.dragStart(event, i, j, \"start\")} draggable><FaHiking /></div>}\r\n                                            {i == endNodei && j == endNodej &&\r\n                                                <div onDragStart={(event) => this.dragStart(event, i, j, \"end\")} draggable><FaArchway /></div>}\r\n                                        </td>\r\n                                    ))}\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Body;","import React from 'react';\r\nimport './App.css';\r\nimport Body from './Body';\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <div><Body algorithm/></div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './Test.css';\r\n\r\nclass Test extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    checkBoxChange =(e)=>{\r\n        console.log(e.target.checked)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            <div className = \"switch\">\r\n                <input type=\"checkbox\" id = \"checkbox1\" onClick={this.checkBoxChange}/>\r\n                <label htmlFor=\"checkbox1\"></label>\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Test;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport Test from './Test';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
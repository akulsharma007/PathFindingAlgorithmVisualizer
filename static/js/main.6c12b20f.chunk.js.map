{"version":3,"sources":["Header.js","Body.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","algorithmSelect","selectedAlgorithm","setState","speedSelect","selectedSpeed","calculate","state","Number","className","onClick","this","clearGrid","Component","Body","allowDrop","event","i","j","allOccupiedPlacesCheck","wallRestrictedSpace","filter","ele","length","preventDefault","drop","a","nodeType","dataTransfer","getData","startNodei","startNodej","endNodei","endNodej","dragStart","setData","doubleClickHandler","clickedFlag","arr","style","backgroundColor","wallArr","push","arrr","console","log","clickHandler","mouseMoveHandler","arr1","dijkstra","parenti","parentj","included","shortestPath","mouseDownUpFlag","algorithm","speed","dijkstraCalculate","aStarCalculate","sptSet","forEach","element","distance","MAX_SAFE_INTEGER","timerSpeed","setInterval","disableGridFlag","u","dijkstraMinDistanceNode","clearInterval","timer","arr2","dijkstraRegisterShortest","v","x","y","min","minInd","returnManhattenDistance","Math","abs","fDistance","aStarMinDistanceNode","marginTop","display","map","key","onDragOver","onDrop","onDoubleClick","onMouseEnter","onDragStart","draggable","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6c12b20f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { FaAngleDown } from \"react-icons/fa\";\r\nimport './Header.css';\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedAlgorithm:\"\",\r\n            selectedSpeed:Number\r\n        }\r\n    }\r\n\r\n    algorithmSelect = (selectedAlgorithm)=>{\r\n        this.props.algorithmSelect(selectedAlgorithm);\r\n        this.setState({\r\n            selectedAlgorithm\r\n        })\r\n    }\r\n\r\n    speedSelect = (selectedSpeed)=>{\r\n        this.setState({\r\n            selectedSpeed\r\n        })\r\n    }\r\n\r\n    calculate = () =>{\r\n        if(this.state.selectedAlgorithm!=\"\"){\r\n            this.props.calculate(this.state.selectedAlgorithm,this.state.selectedSpeed);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <ul>\r\n                    <li className=\"dropdown\">\r\n                        <button className=\"dropbtn\">Algorithms{\" \"}<FaAngleDown/></button>\r\n                        <div className=\"dropdown-content\">\r\n                            <button onClick={()=>this.algorithmSelect(\"dijkstra\")}>Dijkstra's Algorithm</button>\r\n                            <button onClick={()=>this.algorithmSelect(\"A*\")}>A* Search Algorithm</button>\r\n                        </div>\r\n                    </li>\r\n                    \r\n                    <li className=\"dropdown\">\r\n                        <button className=\"dropbtn\">Mazes{\" \"}<FaAngleDown/></button>\r\n                        <div className=\"dropdown-content\">\r\n                        <button>soon</button>\r\n                        </div>\r\n                    </li>\r\n\r\n                    <li><button onClick={this.calculate}>Calculate</button></li>\r\n                    <li className=\"rightFloat\"><button onClick={()=>this.props.clearGrid()}>Clear Grid</button></li>\r\n                    <li className=\"dropdown rightFloat\">\r\n                        <button className=\"dropbtn\">Speed{\" \"}<FaAngleDown/></button>\r\n                        <div className=\"dropdown-content\">\r\n                            <button onClick={()=>this.speedSelect(0)}>Original</button>\r\n                            <button onClick={()=>this.speedSelect(4)}>Fast</button>\r\n                            <button onClick={()=>this.speedSelect(1)}>Medium</button>\r\n                            <button onClick={()=>this.speedSelect(2)}>Slow</button>\r\n                        </div>\r\n                    </li>\r\n                </ul>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport { FaHiking, FaArchway } from \"react-icons/fa\";\r\nimport Header from './Header';\r\nimport './Body.css';\r\n\r\nclass Body extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let arr = [];\r\n        for (let i = 0; i < 20; i++) {\r\n            arr[i] = [];\r\n            for (let j = 0; j < 61; j++) {\r\n                arr[i][j] = { dijkstra: { parenti: -1, parentj: -1, included: false, shortestPath: false } };\r\n            }\r\n        }\r\n        this.state = {\r\n            arr: arr,\r\n            startNodei: 10,\r\n            startNodej: 10,\r\n            endNodei: 10,\r\n            endNodej: 50,\r\n            wallRestrictedSpace: [],\r\n            clickedFlag: false,\r\n            mouseDownUpFlag: false,\r\n            disableGridFlag: false,\r\n            selectedAlgorithm: \"\"\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let arr = this.state.arr;\r\n        arr.forEach((ele, i) => {\r\n            ele.forEach((element, j) => {\r\n                element.style = { backgroundColor: \"white\" }\r\n            })\r\n        })\r\n\r\n        await this.setState({\r\n            arr: arr\r\n        })\r\n    }\r\n\r\n    allowDrop = (event, i, j) => {\r\n        if (!this.allOccupiedPlacesCheck(i, j) && ((this.state.wallRestrictedSpace.filter(ele => ele.i == i && ele.j == j)).length == 0)) {\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n    drop = async (event, i, j) => {\r\n        event.preventDefault();\r\n        const nodeType = event.dataTransfer.getData(\"nodeType\");\r\n        if (nodeType == \"start\") {\r\n            await this.setState({\r\n                startNodei: i,\r\n                startNodej: j\r\n            })\r\n        } else if (nodeType == \"end\") {\r\n            await this.setState({\r\n                endNodei: i,\r\n                endNodej: j\r\n            })\r\n        }\r\n    }\r\n\r\n    dragStart = (event, i, j, nodeType) => {\r\n        event.dataTransfer.setData(\"nodeType\", nodeType);\r\n    }\r\n\r\n    allOccupiedPlacesCheck = (i, j) => {\r\n        const { startNodei, startNodej, endNodei, endNodej } = this.state;\r\n\r\n        if ((i == startNodei && j == startNodej) || (i == endNodei && j == endNodej)) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    doubleClickHandler = async (event, i, j) => {\r\n        await this.setState({\r\n            clickedFlag: false\r\n        })\r\n        let arr = this.state.arr;\r\n        if (!this.allOccupiedPlacesCheck(i, j)) {\r\n            if (arr[i][j].style.backgroundColor != \"black\") {\r\n                arr[i][j].style = { backgroundColor: \"black\" };\r\n                let wallArr = this.state.wallRestrictedSpace;\r\n                wallArr.push({ i, j });\r\n                await this.setState({\r\n                    wallRestrictedSpace: wallArr,\r\n                    arr: arr\r\n                })\r\n\r\n            } else {\r\n                arr[i][j].style = { backgroundColor: \"white\" };\r\n                let arrr = this.state.wallRestrictedSpace.filter(ele => ele.i != i || ele.j != j)\r\n                await this.setState({\r\n                    wallRestrictedSpace: arrr,\r\n                    arr: arr\r\n                })\r\n                console.log(arrr);\r\n            }\r\n        }\r\n    }\r\n\r\n    clickHandler = async (event, i, j) => {\r\n        await this.setState({\r\n            clickedFlag: !this.state.clickedFlag\r\n        })\r\n    }\r\n\r\n    mouseMoveHandler = async (event, i, j) => {\r\n        if (this.state.clickedFlag) {\r\n            let arr = this.state.arr;\r\n            if (!this.allOccupiedPlacesCheck(i, j)) {\r\n                if (arr[i][j].style.backgroundColor != \"black\") {\r\n                    arr[i][j].style = { backgroundColor: \"black\" }\r\n                    let wallArr = this.state.wallRestrictedSpace;\r\n                    wallArr.push({ i, j });\r\n                    await this.setState({\r\n                        wallRestrictedSpace: wallArr,\r\n                        arr: arr\r\n                    })\r\n                } else {\r\n                    arr[i][j].style = { backgroundColor: \"white\" }\r\n                    let arrr = this.state.wallRestrictedSpace.filter(ele => ele.i != i || ele.j != j);\r\n                    await this.setState({\r\n                        wallRestrictedSpace: arrr,\r\n                        arr: arr\r\n                    })\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /***************Algorithms Implementation */\r\n    clearGrid = async () => {\r\n        let arr1 = this.state.arr;\r\n        for (let i = 0; i < 20; i++) {\r\n            for (let j = 0; j < 61; j++) {\r\n                arr1[i][j].dijkstra = { parenti: -1, parentj: -1, included: false, shortestPath: false };\r\n                arr1[i][j].style = { backgroundColor: \"white\" }\r\n            }\r\n        }\r\n        await this.setState({\r\n            arr: arr1,\r\n            startNodei: 10,\r\n            startNodej: 10,\r\n            endNodei: 10,\r\n            endNodej: 50,\r\n            wallRestrictedSpace: [],\r\n            clickedFlag: false,\r\n            mouseDownUpFlag: false,\r\n            selectedAlgorithm: \"\"\r\n        })\r\n    }\r\n\r\n    algorithmSelect = (algorithm)=>{\r\n        if (algorithm == \"dijkstra\") {\r\n            this.setState({\r\n                selectedAlgorithm: \"dijkstra\"\r\n            })\r\n        }\r\n        if(algorithm == \"A*\"){\r\n            this.setState({\r\n                selectedAlgorithm: \"A*\"\r\n            })\r\n        }\r\n    }\r\n    \r\n    calculate = (algorithm, speed) => {\r\n        if (algorithm == \"dijkstra\") {\r\n            this.dijkstraCalculate(speed);\r\n        }\r\n        if (algorithm == \"A*\"){\r\n            this.aStarCalculate(speed);\r\n        }\r\n    }\r\n\r\n    dijkstraCalculate = async (speed) => {\r\n\r\n        const { arr, startNodei, startNodej } = this.state;\r\n        let sptSet = [];\r\n        arr.forEach((ele, i) => {\r\n            ele.forEach((element, j) => {\r\n                if (i == startNodei && j == startNodej) {\r\n                    sptSet.push({ i, j, distance: 0 })\r\n                } else {\r\n                    sptSet.push({ i, j, distance: Number.MAX_SAFE_INTEGER })\r\n                }\r\n            })\r\n        })\r\n\r\n        let v = 0;\r\n\r\n        let timerSpeed = Number;\r\n        if (speed == 1) {\r\n            timerSpeed = 200;\r\n        } else if (speed == 2) {\r\n            timerSpeed = 500;\r\n        } else if (speed == 4) {\r\n            timerSpeed = 1;\r\n        }\r\n        if (speed != 0) {\r\n            let timer = await setInterval(async () => {\r\n                this.setState({\r\n                    disableGridFlag: true\r\n                })\r\n                let u = this.dijkstraMinDistanceNode(sptSet);\r\n                if (u == -1) {\r\n                    clearInterval(timer);\r\n                    this.setState({\r\n                        disableGridFlag: false\r\n                    })\r\n                    return;\r\n                }\r\n                let arr1 = arr;\r\n                arr1[sptSet[u].i][sptSet[u].j].dijkstra.included = true;\r\n\r\n                await this.setState({\r\n                    arr: arr1\r\n                })\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == sptSet[u].i - 1 && ele.j == sptSet[u].j)).length == 0)\r\n                    && (sptSet[u].i - 1 >= 0 && sptSet[u].i - 1 < 20)\r\n                    && (sptSet[u].j >= 0 && sptSet[u].j < 61\r\n                        && !(arr1[sptSet[u].i - 1][sptSet[u].j].dijkstra.included)\r\n                    )\r\n                ) {\r\n\r\n                    if (sptSet[u].distance + 1 < sptSet[u - 61].distance) {\r\n                        sptSet[u - 61].distance = sptSet[u].distance + 1;\r\n                        let arr2 = arr;\r\n                        arr2[sptSet[u].i - 1][sptSet[u].j].dijkstra.parenti = sptSet[u].i;\r\n                        arr2[sptSet[u].i - 1][sptSet[u].j].dijkstra.parentj = sptSet[u].j;\r\n                        await this.setState({\r\n                            arr: arr2\r\n                        })\r\n\r\n                    }\r\n                }\r\n\r\n                // i+1 adjacent\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == sptSet[u].i + 1 && ele.j == sptSet[u].j)).length == 0)\r\n                    && (sptSet[u].i + 1 >= 0 && sptSet[u].i + 1 < 20)\r\n                    && (sptSet[u].j >= 0 && sptSet[u].j < 61\r\n                        && !(arr1[sptSet[u].i + 1][sptSet[u].j].dijkstra.included)\r\n                    )\r\n                ) {\r\n\r\n                    if (sptSet[u].distance + 1 < sptSet[u + 61].distance) {\r\n                        sptSet[u + 61].distance = sptSet[u].distance + 1;\r\n                        let arr2 = arr;\r\n                        arr2[sptSet[u].i + 1][sptSet[u].j].dijkstra.parenti = sptSet[u].i;\r\n                        arr2[sptSet[u].i + 1][sptSet[u].j].dijkstra.parentj = sptSet[u].j;\r\n                        await this.setState({\r\n                            arr: arr2\r\n                        })\r\n\r\n                    }\r\n                }\r\n\r\n                // j-1 adjacent\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == sptSet[u].i && ele.j == sptSet[u].j - 1)).length == 0)\r\n                    && (sptSet[u].i >= 0 && sptSet[u].i < 20)\r\n                    && (sptSet[u].j - 1 >= 0 && sptSet[u].j - 1 < 61\r\n                        && !(arr1[sptSet[u].i][sptSet[u].j - 1].dijkstra.included)\r\n                    )\r\n                ) {\r\n\r\n                    if (sptSet[u].distance + 1 < sptSet[u - 1].distance) {\r\n                        sptSet[u - 1].distance = sptSet[u].distance + 1;\r\n                        let arr2 = arr;\r\n                        arr2[sptSet[u].i][sptSet[u].j - 1].dijkstra.parenti = sptSet[u].i;\r\n                        arr2[sptSet[u].i][sptSet[u].j - 1].dijkstra.parentj = sptSet[u].j;\r\n                        await this.setState({\r\n                            arr: arr2\r\n                        })\r\n\r\n                    }\r\n                }\r\n\r\n                // j+1 adjacent\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == sptSet[u].i && ele.j == sptSet[u].j + 1)).length == 0)\r\n                    && (sptSet[u].i >= 0 && sptSet[u].i < 20)\r\n                    && (sptSet[u].j + 1 >= 0 && sptSet[u].j + 1 < 61\r\n                        && !(arr1[sptSet[u].i][sptSet[u].j + 1].dijkstra.included)\r\n                    )\r\n                ) {\r\n\r\n                    if (sptSet[u].distance + 1 < sptSet[u + 1].distance) {\r\n                        sptSet[u + 1].distance = sptSet[u].distance + 1;\r\n                        let arr2 = arr;\r\n                        arr2[sptSet[u].i][sptSet[u].j + 1].dijkstra.parenti = sptSet[u].i;\r\n                        arr2[sptSet[u].i][sptSet[u].j + 1].dijkstra.parentj = sptSet[u].j;\r\n                        await this.setState({\r\n                            arr: arr2\r\n                        })\r\n\r\n                    }\r\n                }\r\n\r\n                if ((sptSet[u].i == this.state.endNodei && sptSet[u].j == this.state.endNodej)) {\r\n                    this.dijkstraRegisterShortest(speed);\r\n                    clearInterval(timer);\r\n                }\r\n                v++;\r\n\r\n            }, timerSpeed);\r\n        } else {\r\n            for (let i = 0; i < sptSet.length; i++) {\r\n                let u = this.dijkstraMinDistanceNode(sptSet);\r\n                if (u == -1) {\r\n                    this.setState({\r\n                        disableGridFlag: false\r\n                    })\r\n                    break;\r\n                }\r\n                let arr1 = arr;\r\n                arr1[sptSet[u].i][sptSet[u].j].dijkstra.included = true;\r\n\r\n                this.setState({\r\n                    arr: arr1\r\n                })\r\n\r\n                //i-1 adjacent\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == sptSet[u].i - 1 && ele.j == sptSet[u].j)).length == 0)\r\n                    && (sptSet[u].i - 1 >= 0 && sptSet[u].i - 1 < 20)\r\n                    && (sptSet[u].j >= 0 && sptSet[u].j < 61\r\n                        && !(arr1[sptSet[u].i - 1][sptSet[u].j].dijkstra.included)\r\n                    )\r\n                ) {\r\n                    if (sptSet[u].distance + 1 < sptSet[u - 61].distance) {\r\n                        sptSet[u - 61].distance = sptSet[u].distance + 1;\r\n                        let arr2 = arr;\r\n                        arr2[sptSet[u].i - 1][sptSet[u].j].dijkstra.parenti = sptSet[u].i;\r\n                        arr2[sptSet[u].i - 1][sptSet[u].j].dijkstra.parentj = sptSet[u].j;\r\n                        this.setState({\r\n                            arr: arr2\r\n                        })\r\n                    }\r\n                }\r\n\r\n                // i+1 adjacent\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == sptSet[u].i + 1 && ele.j == sptSet[u].j)).length == 0)\r\n                    && (sptSet[u].i + 1 >= 0 && sptSet[u].i + 1 < 20)\r\n                    && (sptSet[u].j >= 0 && sptSet[u].j < 61\r\n                        && !(arr1[sptSet[u].i + 1][sptSet[u].j].dijkstra.included)\r\n                    )\r\n                ) {\r\n                    if (sptSet[u].distance + 1 < sptSet[u + 61].distance) {\r\n                        sptSet[u + 61].distance = sptSet[u].distance + 1;\r\n                        let arr2 = arr;\r\n                        arr2[sptSet[u].i + 1][sptSet[u].j].dijkstra.parenti = sptSet[u].i;\r\n                        arr2[sptSet[u].i + 1][sptSet[u].j].dijkstra.parentj = sptSet[u].j;\r\n                        this.setState({\r\n                            arr: arr2\r\n                        })\r\n                    }\r\n                }\r\n\r\n                // j-1 adjacent\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == sptSet[u].i && ele.j == sptSet[u].j - 1)).length == 0)\r\n                    && (sptSet[u].i >= 0 && sptSet[u].i < 20)\r\n                    && (sptSet[u].j - 1 >= 0 && sptSet[u].j - 1 < 61\r\n                        && !(arr1[sptSet[u].i][sptSet[u].j - 1].dijkstra.included)\r\n                    )\r\n                ) {\r\n                    if (sptSet[u].distance + 1 < sptSet[u - 1].distance) {\r\n                        sptSet[u - 1].distance = sptSet[u].distance + 1;\r\n                        let arr2 = arr;\r\n                        arr2[sptSet[u].i][sptSet[u].j - 1].dijkstra.parenti = sptSet[u].i;\r\n                        arr2[sptSet[u].i][sptSet[u].j - 1].dijkstra.parentj = sptSet[u].j;\r\n                        this.setState({\r\n                            arr: arr2\r\n                        })\r\n                    }\r\n                }\r\n\r\n                // j+1 adjacent\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == sptSet[u].i && ele.j == sptSet[u].j + 1)).length == 0)\r\n                    && (sptSet[u].i >= 0 && sptSet[u].i < 20)\r\n                    && (sptSet[u].j + 1 >= 0 && sptSet[u].j + 1 < 61\r\n                        && !(arr1[sptSet[u].i][sptSet[u].j + 1].dijkstra.included)\r\n                    )\r\n                ) {\r\n                    if (sptSet[u].distance + 1 < sptSet[u + 1].distance) {\r\n                        sptSet[u + 1].distance = sptSet[u].distance + 1;\r\n                        let arr2 = arr;\r\n                        arr2[sptSet[u].i][sptSet[u].j + 1].dijkstra.parenti = sptSet[u].i;\r\n                        arr2[sptSet[u].i][sptSet[u].j + 1].dijkstra.parentj = sptSet[u].j;\r\n                        this.setState({\r\n                            arr: arr2\r\n                        })\r\n                    }\r\n                }\r\n\r\n                if (sptSet[u].i == this.state.endNodei && sptSet[u].j == this.state.endNodej) {\r\n                    this.dijkstraRegisterShortest(0);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    dijkstraRegisterShortest = async (speed) => {\r\n        const { arr, startNodei, startNodej, endNodei, endNodej } = this.state;\r\n        if (arr[endNodei][endNodej].dijkstra.parenti != -1 && arr[endNodei][endNodej].dijkstra.parentj != -1) {\r\n            let i = endNodei;\r\n            let j = endNodej;\r\n            let timerSpeed = Number;\r\n            if (speed == 1) {\r\n                timerSpeed = 200;\r\n            } else if (speed == 2) {\r\n                timerSpeed = 500;\r\n            } else if (speed == 4) {\r\n                timerSpeed = 1\r\n            }\r\n            if (speed != 0) {\r\n                let timer = await setInterval(async () => {\r\n                    let x = arr[i][j].dijkstra.parenti;\r\n                    let y = arr[i][j].dijkstra.parentj;\r\n                    let arr1 = arr;\r\n                    arr1[i][j].dijkstra.shortestPath = true;\r\n                    await this.setState({\r\n                        arr: arr1\r\n                    })\r\n                    i = x;\r\n                    j = y;\r\n                    if (i == startNodei && j == startNodej) {\r\n                        this.setState({\r\n                            disableGridFlag: false\r\n                        })\r\n                        clearInterval(timer);\r\n                    }\r\n                }, timerSpeed);\r\n            } else {\r\n                while (i != startNodei || j != startNodej) {\r\n                    let x = arr[i][j].dijkstra.parenti;\r\n                    let y = arr[i][j].dijkstra.parentj;\r\n                    let arr1 = arr;\r\n                    arr1[i][j].dijkstra.shortestPath = true;\r\n                    await this.setState({\r\n                        arr: arr1\r\n                    })\r\n                    i = x;\r\n                    j = y;\r\n                }\r\n                await this.setState({\r\n                    disableGridFlag: false\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    dijkstraMinDistanceNode = (sptSet) => {\r\n        let min = Number.MAX_SAFE_INTEGER;\r\n        let minInd = -1;\r\n\r\n        for (let i = 0; i < sptSet.length; i++) {\r\n            if (this.state.arr[sptSet[i].i][sptSet[i].j].dijkstra.included == false\r\n                && ((this.state.wallRestrictedSpace.filter(ele => ele.i == sptSet[i].i && ele.j == sptSet[i].j)).length == 0)\r\n                && sptSet[i].distance < min\r\n            ) {\r\n\r\n                min = sptSet[i].distance;\r\n                minInd = i;\r\n            }\r\n        }\r\n        return minInd;\r\n    }\r\n\r\n    returnManhattenDistance = (i,j) =>{\r\n        return Math.abs(i-this.state.endNodei)+Math.abs(j-this.state.endNodej);\r\n    }\r\n\r\n    aStarCalculate = async (speed) => {\r\n\r\n        const { arr, startNodei, startNodej } = this.state;\r\n        let sptSet = [];\r\n        arr.forEach((ele, i) => {\r\n            ele.forEach((element, j) => {\r\n                if (i == startNodei && j == startNodej) {\r\n                    sptSet.push({ i, j, distance: 0, fDistance: this.returnManhattenDistance(i,j) })\r\n                } else {\r\n                    sptSet.push({ i, j, distance: Number.MAX_SAFE_INTEGER, fDistance: Number.MAX_SAFE_INTEGER })\r\n                }\r\n            })\r\n        })\r\n\r\n        let v = 0;\r\n\r\n        let timerSpeed = Number;\r\n        if (speed == 1) {\r\n            timerSpeed = 200;\r\n        } else if (speed == 2) {\r\n            timerSpeed = 500;\r\n        } else if (speed == 4) {\r\n            timerSpeed = 1;\r\n        }\r\n        if (speed != 0) {\r\n            let timer = await setInterval(async () => {\r\n                this.setState({\r\n                    disableGridFlag: true\r\n                })\r\n                let u = this.aStarMinDistanceNode(sptSet);\r\n                if (u == -1) {\r\n                    clearInterval(timer);\r\n                    this.setState({\r\n                        disableGridFlag: false\r\n                    })\r\n                    return;\r\n                }\r\n                let arr1 = arr;\r\n                arr1[sptSet[u].i][sptSet[u].j].dijkstra.included = true;\r\n\r\n                await this.setState({\r\n                    arr: arr1\r\n                })\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == sptSet[u].i - 1 && ele.j == sptSet[u].j)).length == 0)\r\n                    && (sptSet[u].i - 1 >= 0 && sptSet[u].i - 1 < 20)\r\n                    && (sptSet[u].j >= 0 && sptSet[u].j < 61\r\n                        && !(arr1[sptSet[u].i - 1][sptSet[u].j].dijkstra.included)\r\n                    )\r\n                ) {\r\n\r\n                    if (sptSet[u].distance + 1 < sptSet[u - 61].distance) {\r\n                        sptSet[u - 61].distance = sptSet[u].distance + 1;\r\n                        sptSet[u - 61].fDistance = sptSet[u].distance + 1+this.returnManhattenDistance(sptSet[u].i-1,sptSet[u].j);\r\n                        let arr2 = arr;\r\n                        arr2[sptSet[u].i - 1][sptSet[u].j].dijkstra.parenti = sptSet[u].i;\r\n                        arr2[sptSet[u].i - 1][sptSet[u].j].dijkstra.parentj = sptSet[u].j;\r\n                        await this.setState({\r\n                            arr: arr2\r\n                        })\r\n\r\n                    }\r\n                }\r\n\r\n                // i+1 adjacent\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == sptSet[u].i + 1 && ele.j == sptSet[u].j)).length == 0)\r\n                    && (sptSet[u].i + 1 >= 0 && sptSet[u].i + 1 < 20)\r\n                    && (sptSet[u].j >= 0 && sptSet[u].j < 61\r\n                        && !(arr1[sptSet[u].i + 1][sptSet[u].j].dijkstra.included)\r\n                    )\r\n                ) {\r\n\r\n                    if (sptSet[u].distance + 1 < sptSet[u + 61].distance) {\r\n                        sptSet[u + 61].distance = sptSet[u].distance + 1;\r\n                        sptSet[u + 61].fDistance = sptSet[u].distance + 1+this.returnManhattenDistance(sptSet[u].i+1,sptSet[u].j);\r\n                        let arr2 = arr;\r\n                        arr2[sptSet[u].i + 1][sptSet[u].j].dijkstra.parenti = sptSet[u].i;\r\n                        arr2[sptSet[u].i + 1][sptSet[u].j].dijkstra.parentj = sptSet[u].j;\r\n                        await this.setState({\r\n                            arr: arr2\r\n                        })\r\n\r\n                    }\r\n                }\r\n\r\n                // j-1 adjacent\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == sptSet[u].i && ele.j == sptSet[u].j - 1)).length == 0)\r\n                    && (sptSet[u].i >= 0 && sptSet[u].i < 20)\r\n                    && (sptSet[u].j - 1 >= 0 && sptSet[u].j - 1 < 61\r\n                        && !(arr1[sptSet[u].i][sptSet[u].j - 1].dijkstra.included)\r\n                    )\r\n                ) {\r\n\r\n                    if (sptSet[u].distance + 1 < sptSet[u - 1].distance) {\r\n                        sptSet[u - 1].distance = sptSet[u].distance + 1;\r\n                        sptSet[u - 1].fDistance = sptSet[u].distance + 1+this.returnManhattenDistance(sptSet[u].i,sptSet[u].j-1);\r\n                        let arr2 = arr;\r\n                        arr2[sptSet[u].i][sptSet[u].j - 1].dijkstra.parenti = sptSet[u].i;\r\n                        arr2[sptSet[u].i][sptSet[u].j - 1].dijkstra.parentj = sptSet[u].j;\r\n                        await this.setState({\r\n                            arr: arr2\r\n                        })\r\n\r\n                    }\r\n                }\r\n\r\n                // j+1 adjacent\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == sptSet[u].i && ele.j == sptSet[u].j + 1)).length == 0)\r\n                    && (sptSet[u].i >= 0 && sptSet[u].i < 20)\r\n                    && (sptSet[u].j + 1 >= 0 && sptSet[u].j + 1 < 61\r\n                        && !(arr1[sptSet[u].i][sptSet[u].j + 1].dijkstra.included)\r\n                    )\r\n                ) {\r\n\r\n                    if (sptSet[u].distance + 1 < sptSet[u + 1].distance) {\r\n                        sptSet[u + 1].distance = sptSet[u].distance + 1;\r\n                        sptSet[u + 1].fDistance = sptSet[u].distance + 1+this.returnManhattenDistance(sptSet[u].i,sptSet[u].j+1);\r\n                        let arr2 = arr;\r\n                        arr2[sptSet[u].i][sptSet[u].j + 1].dijkstra.parenti = sptSet[u].i;\r\n                        arr2[sptSet[u].i][sptSet[u].j + 1].dijkstra.parentj = sptSet[u].j;\r\n                        await this.setState({\r\n                            arr: arr2\r\n                        })\r\n\r\n                    }\r\n                }\r\n\r\n                if ((sptSet[u].i == this.state.endNodei && sptSet[u].j == this.state.endNodej)) {\r\n                    this.dijkstraRegisterShortest(speed);\r\n                    clearInterval(timer);\r\n                }\r\n                v++;\r\n\r\n            }, timerSpeed);\r\n        } else {\r\n            for (let i = 0; i < sptSet.length; i++) {\r\n                let u = this.aStarMinDistanceNode(sptSet);\r\n                if (u == -1) {\r\n                    this.setState({\r\n                        disableGridFlag: false\r\n                    })\r\n                    break;\r\n                }\r\n                let arr1 = arr;\r\n                arr1[sptSet[u].i][sptSet[u].j].dijkstra.included = true;\r\n\r\n                this.setState({\r\n                    arr: arr1\r\n                })\r\n\r\n                //i-1 adjacent\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == sptSet[u].i - 1 && ele.j == sptSet[u].j)).length == 0)\r\n                    && (sptSet[u].i - 1 >= 0 && sptSet[u].i - 1 < 20)\r\n                    && (sptSet[u].j >= 0 && sptSet[u].j < 61\r\n                        && !(arr1[sptSet[u].i - 1][sptSet[u].j].dijkstra.included)\r\n                    )\r\n                ) {\r\n                    if (sptSet[u].distance + 1 < sptSet[u - 61].distance) {\r\n                        sptSet[u - 61].distance = sptSet[u].distance + 1;\r\n                        sptSet[u - 61].fDistance = sptSet[u].distance + 1+this.returnManhattenDistance(sptSet[u].i-1,sptSet[u].j);\r\n                        let arr2 = arr;\r\n                        arr2[sptSet[u].i - 1][sptSet[u].j].dijkstra.parenti = sptSet[u].i;\r\n                        arr2[sptSet[u].i - 1][sptSet[u].j].dijkstra.parentj = sptSet[u].j;\r\n                        this.setState({\r\n                            arr: arr2\r\n                        })\r\n                    }\r\n                }\r\n\r\n                // i+1 adjacent\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == sptSet[u].i + 1 && ele.j == sptSet[u].j)).length == 0)\r\n                    && (sptSet[u].i + 1 >= 0 && sptSet[u].i + 1 < 20)\r\n                    && (sptSet[u].j >= 0 && sptSet[u].j < 61\r\n                        && !(arr1[sptSet[u].i + 1][sptSet[u].j].dijkstra.included)\r\n                    )\r\n                ) {\r\n                    if (sptSet[u].distance + 1 < sptSet[u + 61].distance) {\r\n                        sptSet[u + 61].distance = sptSet[u].distance + 1;\r\n                        sptSet[u + 61].fDistance = sptSet[u].distance + 1+this.returnManhattenDistance(sptSet[u].i+1,sptSet[u].j);\r\n                        let arr2 = arr;\r\n                        arr2[sptSet[u].i + 1][sptSet[u].j].dijkstra.parenti = sptSet[u].i;\r\n                        arr2[sptSet[u].i + 1][sptSet[u].j].dijkstra.parentj = sptSet[u].j;\r\n                        this.setState({\r\n                            arr: arr2\r\n                        })\r\n                    }\r\n                }\r\n\r\n                // j-1 adjacent\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == sptSet[u].i && ele.j == sptSet[u].j - 1)).length == 0)\r\n                    && (sptSet[u].i >= 0 && sptSet[u].i < 20)\r\n                    && (sptSet[u].j - 1 >= 0 && sptSet[u].j - 1 < 61\r\n                        && !(arr1[sptSet[u].i][sptSet[u].j - 1].dijkstra.included)\r\n                    )\r\n                ) {\r\n                    if (sptSet[u].distance + 1 < sptSet[u - 1].distance) {\r\n                        sptSet[u - 1].distance = sptSet[u].distance + 1;\r\n                        sptSet[u - 1].fDistance = sptSet[u].distance + 1+this.returnManhattenDistance(sptSet[u].i,sptSet[u].j-1);\r\n                        let arr2 = arr;\r\n                        arr2[sptSet[u].i][sptSet[u].j - 1].dijkstra.parenti = sptSet[u].i;\r\n                        arr2[sptSet[u].i][sptSet[u].j - 1].dijkstra.parentj = sptSet[u].j;\r\n                        this.setState({\r\n                            arr: arr2\r\n                        })\r\n                    }\r\n                }\r\n\r\n                // j+1 adjacent\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == sptSet[u].i && ele.j == sptSet[u].j + 1)).length == 0)\r\n                    && (sptSet[u].i >= 0 && sptSet[u].i < 20)\r\n                    && (sptSet[u].j + 1 >= 0 && sptSet[u].j + 1 < 61\r\n                        && !(arr1[sptSet[u].i][sptSet[u].j + 1].dijkstra.included)\r\n                    )\r\n                ) {\r\n                    if (sptSet[u].distance + 1 < sptSet[u + 1].distance) {\r\n                        sptSet[u + 1].distance = sptSet[u].distance + 1;\r\n                        sptSet[u + 1].fDistance = sptSet[u].distance + 1+this.returnManhattenDistance(sptSet[u].i,sptSet[u].j+1);\r\n                        let arr2 = arr;\r\n                        arr2[sptSet[u].i][sptSet[u].j + 1].dijkstra.parenti = sptSet[u].i;\r\n                        arr2[sptSet[u].i][sptSet[u].j + 1].dijkstra.parentj = sptSet[u].j;\r\n                        this.setState({\r\n                            arr: arr2\r\n                        })\r\n                    }\r\n                }\r\n\r\n                if (sptSet[u].i == this.state.endNodei && sptSet[u].j == this.state.endNodej) {\r\n                    this.dijkstraRegisterShortest(0);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    \r\n    aStarMinDistanceNode = (sptSet) => {\r\n        let min = Number.MAX_SAFE_INTEGER;\r\n        let minInd = -1;\r\n\r\n        for (let i = 0; i < sptSet.length; i++) {\r\n            if (this.state.arr[sptSet[i].i][sptSet[i].j].dijkstra.included == false\r\n                && ((this.state.wallRestrictedSpace.filter(ele => ele.i == sptSet[i].i && ele.j == sptSet[i].j)).length == 0)\r\n                && sptSet[i].fDistance < min\r\n            ) {\r\n\r\n                min = sptSet[i].fDistance;\r\n                minInd = i;\r\n            }\r\n        }\r\n        return minInd;\r\n    }\r\n\r\n    render() {\r\n        const { startNodei, startNodej, endNodei, endNodej, arr } = this.state;\r\n        return (\r\n            <div className={this.state.disableGridFlag ? \"disableGrid\" : \"enableGrid\"}>\r\n                <div className=\"headerClass\"><Header algorithmSelect={this.algorithmSelect} calculate={this.calculate} clearGrid={this.clearGrid} /></div>\r\n                <div className=\"bodyHeader\">\r\n                    <ul>\r\n                        <li>Source Node <FaHiking /></li>\r\n                        <li>Destination Node <FaArchway /></li>\r\n                        <li style={{ marginTop: 'auto' }}>Unvisited Node <div className=\"unvisited\"></div></li>\r\n                        <li style={{ marginTop: 'auto' }}>Visited Node <div className=\"visited\"></div></li>\r\n                        <li style={{ marginTop: 'auto' }}>Shortest Path Node <div className=\"shortestPath\"></div></li>\r\n                        <li style={{ marginTop: 'auto' }}>Obstacle Node <div className=\"obstacle\"></div></li>\r\n                    </ul>\r\n                        <div style={this.state.selectedAlgorithm == \"\" ?{display:\"block\"}:{display:\"none\"}} className=\"alignClass\">Select an algorithm to find the shortest path!</div>\r\n                        <div style={this.state.selectedAlgorithm == \"dijkstra\" ?{display:\"block\"}:{display:\"none\"}} className=\"alignClass\">Dijkstra Algorithm is a weighted greedy algorithm which guarantees a shortest path with a time complexity of O(V^2) when represented using adjacency matrix and O(E logV) when represented using adjacency list.</div>\r\n                        <div style={this.state.selectedAlgorithm == \"A*\" ?{display:\"block\"}:{display:\"none\"}} className=\"alignClass\">A* Search Algorithm is a weighted greedy algorithm which is an extension to Dijkshtra's algorithm aiming at optimizing its performance by the use of heuristics.</div>\r\n                    <table>\r\n                        <tbody>\r\n                            {arr.map((ele, i) => (\r\n                                <tr key={i}>\r\n                                    {ele.map((ele, j) => (\r\n                                        <td\r\n                                            key={j}\r\n                                            onDragOver={(event) => this.allowDrop(event, i, j)}\r\n                                            onDrop={(event) => this.drop(event, i, j)}\r\n                                            onDoubleClick={(event) => this.doubleClickHandler(event, i, j)}\r\n                                            onClick={(event) => this.clickHandler(event, i, j)}\r\n                                            onMouseEnter={(event) => this.mouseMoveHandler(event, i, j)}\r\n                                            style={arr[i][j].dijkstra.included ? (arr[i][j].dijkstra.shortestPath ? { backgroundColor: \"green\" } : { backgroundColor: \"yellow\" }) : ele.style}\r\n                                        >\r\n                                            {i == startNodei && j == startNodej &&\r\n                                                <div onDragStart={(event) => this.dragStart(event, i, j, \"start\")} draggable><FaHiking /></div>}\r\n                                            {i == endNodei && j == endNodej &&\r\n                                                <div onDragStart={(event) => this.dragStart(event, i, j, \"end\")} draggable><FaArchway /></div>}\r\n                                        </td>\r\n                                    ))}\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Body;","import React from 'react';\r\nimport './App.css';\r\nimport Body from './Body';\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <div><Body algorithm/></div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
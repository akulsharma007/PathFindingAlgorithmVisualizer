{"version":3,"sources":["Header.js","Body.js","App.js","serviceWorker.js","Test.js","index.js"],"names":["Header","props","algorithmSelect","selectedAlgorithm","setState","speedSelect","selectedSpeed","calculate","state","Number","className","onClick","mazeSelect","this","clearGrid","clearPath","Component","Body","arr","startNodei","startNodej","endNodei","endNodej","wallRestrictedSpace","clickedFlag","mouseDownUpFlag","disableGridFlag","componentDidMount","a","i","j","dijkstra","parenti","parentj","included","shortestPath","dfs","style","backgroundColor","allowDrop","event","allOccupiedPlacesCheck","filter","ele","length","preventDefault","drop","nodeType","dataTransfer","getData","dragStart","setData","doubleClickHandler","wallArr","push","animation","arrr","clickHandler","mouseMoveHandler","arr1","algorithm","maze","speed","recursiveDiv","dijkstraCalculate","aStarCalculate","dfsCalculate","bfsCalculate","bestFirstSearchCalculate","wall","recursionOfRecursiveDivision","istart","iend","jstart","jend","total","bisectLine","Math","floor","random","skip","skipPoint","sptSet","forEach","element","distance","MAX_SAFE_INTEGER","timerSpeed","setInterval","u","dijkstraMinDistanceNode","clearInterval","timer","arr2","dijkstraRegisterShortest","v","x","y","min","minInd","returnManhattenDistance","abs","fDistance","aStarMinDistanceNode","stack","adjacent","dfsAdjacentNodes","pop","dfsRegisterPath","tempi","tempj","queue","shift","bfsRegisterShortest","marginTop","display","map","key","onDragOver","onDrop","onDoubleClick","onMouseEnter","onDragStart","draggable","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b5d2af7a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { FaAngleDown } from \"react-icons/fa\";\r\nimport './Header.css';\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedAlgorithm:\"\",\r\n            selectedSpeed:Number\r\n        }\r\n    }\r\n\r\n    algorithmSelect = (selectedAlgorithm)=>{\r\n        this.props.algorithmSelect(selectedAlgorithm);\r\n        this.setState({\r\n            selectedAlgorithm\r\n        })\r\n    }\r\n\r\n    speedSelect = (selectedSpeed)=>{\r\n        this.setState({\r\n            selectedSpeed\r\n        })\r\n    }\r\n\r\n    calculate = () =>{\r\n        if(this.state.selectedAlgorithm!=\"\"){\r\n            this.props.calculate(this.state.selectedAlgorithm,this.state.selectedSpeed);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <ul>\r\n                    <li className=\"dropdown\">\r\n                        <button className=\"dropbtn\">Algorithms{\" \"}<FaAngleDown/></button>\r\n                        <div className=\"dropdown-content\">\r\n                            <button onClick={()=>this.algorithmSelect(\"A*\")}>A* Search Algorithm</button>\r\n                            <button onClick={()=>this.algorithmSelect(\"bestFsearch\")}>Best First Search Algorithm</button>\r\n                            <button onClick={()=>this.algorithmSelect(\"dijkstra\")}>Dijkstra's Algorithm</button>\r\n                            <button onClick={()=>this.algorithmSelect(\"bfs\")}>Breadth-First Search Algorithm</button>\r\n                            <button onClick={()=>this.algorithmSelect(\"dfs\")}>Depth-First Search Algorithm</button>\r\n                        </div>\r\n                    </li>\r\n                    \r\n                    <li className=\"dropdown\">\r\n                        <button className=\"dropbtn\">Mazes{\" \"}<FaAngleDown/></button>\r\n                        <div className=\"dropdown-content\">\r\n                        <button onClick={()=>this.props.mazeSelect(\"rd\",this.state.selectedSpeed)}>Random</button>\r\n                        </div>\r\n                    </li>\r\n\r\n                    <li><button onClick={this.calculate}>Calculate</button></li>\r\n                    <li className=\"rightFloat\"><button onClick={()=>this.props.clearGrid()}>Clear Grid</button></li>\r\n                    <li className=\"rightFloat\"><button onClick={()=>this.props.clearPath()}>Clear Path</button></li>\r\n                    <li className=\"dropdown rightFloat\">\r\n                        <button className=\"dropbtn\">Speed{\" \"}<FaAngleDown/></button>\r\n                        <div className=\"dropdown-content\">\r\n                            <button onClick={()=>this.speedSelect(0)}>Original</button>\r\n                            <button onClick={()=>this.speedSelect(4)}>Fast</button>\r\n                            <button onClick={()=>this.speedSelect(1)}>Medium</button>\r\n                            <button onClick={()=>this.speedSelect(2)}>Slow</button>\r\n                        </div>\r\n                    </li>\r\n                </ul>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport { FaHiking, FaArchway } from \"react-icons/fa\";\r\nimport Header from './Header';\r\nimport './Body.css';\r\n\r\nclass Body extends Component {\r\n    state = {\r\n        arr: [],\r\n        startNodei: 10,\r\n        startNodej: 10,\r\n        endNodei: 10,\r\n        endNodej: 50,\r\n        wallRestrictedSpace: [],\r\n        clickedFlag: false,\r\n        mouseDownUpFlag: false,\r\n        disableGridFlag: false,\r\n        selectedAlgorithm: \"\"\r\n    }\r\n\r\n    componentDidMount=async ()=> {\r\n        let arr = [];\r\n        for (let i = 0; i < 20; i++) {\r\n            arr[i] = [];\r\n            for (let j = 0; j < 61; j++) {\r\n                arr[i][j] = { dijkstra: { parenti: -1, parentj: -1, included: false, shortestPath: false }, \r\n                              dfs: { included: false, shortestPath: false },\r\n                              style : { backgroundColor: \"white\" } };\r\n            }\r\n        }\r\n\r\n        await this.setState({\r\n            arr: arr\r\n        })\r\n    }\r\n\r\n    allowDrop = (event, i, j) => {\r\n        if (!this.allOccupiedPlacesCheck(i, j) && ((this.state.wallRestrictedSpace.filter(ele => ele.i == i && ele.j == j)).length == 0)) {\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n    drop = async (event, i, j) => {\r\n        event.preventDefault();\r\n        const nodeType = event.dataTransfer.getData(\"nodeType\");\r\n        if (nodeType == \"start\") {\r\n            await this.setState({\r\n                startNodei: i,\r\n                startNodej: j\r\n            })\r\n        } else if (nodeType == \"end\") {\r\n            await this.setState({\r\n                endNodei: i,\r\n                endNodej: j\r\n            })\r\n        }\r\n    }\r\n\r\n    dragStart = (event, i, j, nodeType) => {\r\n        event.dataTransfer.setData(\"nodeType\", nodeType);\r\n    }\r\n\r\n    allOccupiedPlacesCheck = (i, j) => {\r\n        const { startNodei, startNodej, endNodei, endNodej } = this.state;\r\n\r\n        if ((i == startNodei && j == startNodej) || (i == endNodei && j == endNodej)) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    doubleClickHandler = async (event, i, j) => {\r\n        await this.setState({\r\n            clickedFlag: false\r\n        })\r\n        let arr = this.state.arr;\r\n        if (!this.allOccupiedPlacesCheck(i, j)) {\r\n            if (arr[i][j].style.backgroundColor != \"black\") {\r\n                arr[i][j].style = { backgroundColor: \"black\" };\r\n                let wallArr = this.state.wallRestrictedSpace;\r\n                wallArr.push({ i, j });\r\n                await this.setState({\r\n                    wallRestrictedSpace: wallArr,\r\n                    arr: arr\r\n                })\r\n\r\n            } else {\r\n                arr[i][j].style = { backgroundColor: \"white\", animation:\"none\" };\r\n                let arrr = this.state.wallRestrictedSpace.filter(ele => ele.i != i || ele.j != j)\r\n                await this.setState({\r\n                    wallRestrictedSpace: arrr,\r\n                    arr: arr\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    clickHandler = async (event, i, j) => {\r\n        await this.setState({\r\n            clickedFlag: !this.state.clickedFlag\r\n        })\r\n    }\r\n\r\n    mouseMoveHandler = async (event, i, j) => {\r\n        if (this.state.clickedFlag) {\r\n            let arr = this.state.arr;\r\n            if (!this.allOccupiedPlacesCheck(i, j)) {\r\n                if (arr[i][j].style.backgroundColor != \"black\") {\r\n                    arr[i][j].style = { backgroundColor: \"black\" }\r\n                    let wallArr = this.state.wallRestrictedSpace;\r\n                    wallArr.push({ i, j });\r\n                    await this.setState({\r\n                        wallRestrictedSpace: wallArr,\r\n                        arr: arr\r\n                    })\r\n                } else {\r\n                    arr[i][j].style = { backgroundColor: \"white\", animation:\"none\" }\r\n                    let arrr = this.state.wallRestrictedSpace.filter(ele => ele.i != i || ele.j != j);\r\n                    await this.setState({\r\n                        wallRestrictedSpace: arrr,\r\n                        arr: arr\r\n                    })\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /***************Algorithms Implementation */\r\n    clearGrid = async () => {\r\n        let arr1 = this.state.arr;\r\n        for (let i = 0; i < 20; i++) {\r\n            for (let j = 0; j < 61; j++) {\r\n                arr1[i][j].dijkstra = { parenti: -1, parentj: -1, included: false, shortestPath: false };\r\n                arr1[i][j].dfs = { included: false, shortestPath: false };\r\n                arr1[i][j].style = { backgroundColor: \"white\", animation:\"none\" };\r\n            }\r\n        }\r\n        await this.setState({\r\n            arr: arr1,\r\n            startNodei: 10,\r\n            startNodej: 10,\r\n            endNodei: 10,\r\n            endNodej: 50,\r\n            wallRestrictedSpace: [],\r\n            clickedFlag: false,\r\n            mouseDownUpFlag: false,\r\n            selectedAlgorithm: \"\"\r\n        })\r\n    }\r\n\r\n    clearPath = async () => {\r\n        let arr1 = this.state.arr;\r\n        for (let i = 0; i < 20; i++) {\r\n            for (let j = 0; j < 61; j++) {\r\n                arr1[i][j].dijkstra = { parenti: -1, parentj: -1, included: false, shortestPath: false };\r\n                arr1[i][j].dfs = { included: false, shortestPath: false };\r\n                if(arr1[i][j].style.backgroundColor==\"yellow\"||arr1[i][j].style.backgroundColor==\"green\"){\r\n                    arr1[i][j].style = { backgroundColor: \"white\", animation:\"none\" };\r\n                }\r\n            }\r\n        }\r\n        await this.setState({\r\n            arr: arr1,\r\n            clickedFlag: false,\r\n            mouseDownUpFlag: false\r\n        })\r\n    }\r\n\r\n    algorithmSelect = (algorithm) => {\r\n            this.setState({\r\n                selectedAlgorithm : algorithm\r\n            })\r\n    }\r\n\r\n    mazeSelect = (maze,speed) => {\r\n        if(maze == \"rd\"){\r\n            this.recursiveDiv(speed);\r\n        }\r\n    }\r\n\r\n    calculate = (algorithm, speed) => {\r\n        if (algorithm == \"dijkstra\") {\r\n            this.dijkstraCalculate(speed);\r\n        }\r\n        if (algorithm == \"A*\") {\r\n            this.aStarCalculate(speed);\r\n        }\r\n        if (algorithm == \"dfs\") {\r\n            this.dfsCalculate(speed);\r\n        }\r\n        if (algorithm == \"bfs\") {\r\n            this.bfsCalculate(speed);\r\n        }\r\n        if(algorithm == \"bestFsearch\"){\r\n            this.bestFirstSearchCalculate(speed);\r\n        }\r\n    }\r\n\r\n    recursiveDiv = async (speed) => {\r\n        let wall = this.state.wallRestrictedSpace;\r\n        let style = this.state.arr;\r\n        // if(speed==0){\r\n            for(let i=0;i<20;i++){\r\n                style[i][0].style = { backgroundColor: \"black\" };\r\n                wall.push({i:i,j:0});\r\n                this.setState({\r\n                    arr:style,\r\n                    wallRestrictedSpace:wall\r\n                })\r\n            }\r\n            for(let i=1;i<61;i++){\r\n                style[19][i].style = { backgroundColor: \"black\" };\r\n                wall.push({i:19,j:i});\r\n                this.setState({\r\n                    arr:style,\r\n                    wallRestrictedSpace:wall\r\n                })\r\n            }\r\n            for(let i=19;i>=0;i--){\r\n                style[i][60].style = { backgroundColor: \"black\" };\r\n                wall.push({i:i,j:60});\r\n                this.setState({\r\n                    arr:style,\r\n                    wallRestrictedSpace:wall\r\n                })\r\n            }\r\n            for(let i=59;i>=1;i--){\r\n                style[0][i].style = { backgroundColor: \"black\" };\r\n                wall.push({i:0,j:i});\r\n                this.setState({\r\n                    arr:style,\r\n                    wallRestrictedSpace:wall\r\n                })\r\n            }\r\n            this.recursionOfRecursiveDivision(1,18,1,59);\r\n        // }\r\n    }\r\n\r\n    recursionOfRecursiveDivision = async (istart,iend,jstart,jend)=>{\r\n        if(iend<=istart||iend-istart<2||jend<=jstart||jend-jstart<2){\r\n            return;\r\n        }\r\n        let wall = this.state.wallRestrictedSpace;\r\n        let style = this.state.arr;\r\n            if(jend-jstart > iend-istart ){\r\n                let total = jend-jstart;\r\n                let bisectLine = Math.floor(Math.random()*total);\r\n                let skip = iend-istart;\r\n                let skipPoint = Math.floor(Math.random()*skip);\r\n                for(let i=istart;i<=iend;i++){\r\n                    if(i==istart+skipPoint||\r\n                       (this.state.startNodei==i&&this.state.startNodej==jstart+bisectLine)||\r\n                       (this.state.endNodei==i&&this.state.endNodej==jstart+bisectLine)||\r\n                       (style[i][jstart+bisectLine].style.backgroundColor == \"black\")\r\n                    ){\r\n                        continue;\r\n                    }\r\n                    style[i][jstart+bisectLine].style = { backgroundColor: \"black\" };\r\n                    wall.push({i:i,j:jstart+bisectLine});\r\n                    this.setState({\r\n                        arr:style,\r\n                        wallRestrictedSpace:wall\r\n                    })\r\n                }\r\n                   this.recursionOfRecursiveDivision(istart,iend,jstart,jstart+bisectLine-2);\r\n                   this.recursionOfRecursiveDivision(istart,iend,jstart+bisectLine+2,jend);\r\n            }else{\r\n                let total = iend-istart;\r\n                let bisectLine = Math.floor(Math.random()*total);\r\n                let skip = jend-jstart;\r\n                let skipPoint = Math.floor(Math.random()*skip);\r\n                for(let i=jstart;i<=jend;i++){\r\n                    if(i==jstart+skipPoint||\r\n                      (this.state.startNodei==istart+bisectLine&&this.state.startNodej==i)||\r\n                      (this.state.endNodei==istart+bisectLine&&this.state.endNodej==i)||\r\n                      (style[istart+bisectLine][i].style.backgroundColor == \"black\")\r\n                    ){\r\n                        continue;\r\n                    }\r\n                    style[istart+bisectLine][i].style = { backgroundColor: \"black\" };\r\n                    wall.push({i:istart+bisectLine,j:i});\r\n                    this.setState({\r\n                        arr:style,\r\n                        wallRestrictedSpace:wall\r\n                    })\r\n                }\r\n                this.recursionOfRecursiveDivision(istart,istart+bisectLine-2,jstart,jend);\r\n                this.recursionOfRecursiveDivision(istart+bisectLine+2,iend,jstart,jend);\r\n            }\r\n\r\n\r\n    }\r\n\r\n    dijkstraCalculate = async (speed) => {\r\n\r\n        const { arr, startNodei, startNodej } = this.state;\r\n        let sptSet = [];\r\n        arr.forEach((ele, i) => {\r\n            ele.forEach((element, j) => {\r\n                if (i == startNodei && j == startNodej) {\r\n                    sptSet.push({ i, j, distance: 0 })\r\n                } else {\r\n                    sptSet.push({ i, j, distance: Number.MAX_SAFE_INTEGER })\r\n                }\r\n            })\r\n        })\r\n\r\n        let v = 0;\r\n\r\n        let timerSpeed = Number;\r\n        if (speed == 1) {\r\n            timerSpeed = 200;\r\n        } else if (speed == 2) {\r\n            timerSpeed = 500;\r\n        } else if (speed == 4) {\r\n            timerSpeed = 1;\r\n        }\r\n        if (speed != 0) {\r\n            let timer = await setInterval(async () => {\r\n                this.setState({\r\n                    disableGridFlag: true\r\n                })\r\n                let u = this.dijkstraMinDistanceNode(sptSet);\r\n                if (u == -1) {\r\n                    clearInterval(timer);\r\n                    this.setState({\r\n                        disableGridFlag: false\r\n                    })\r\n                    return;\r\n                }\r\n                let arr1 = arr;\r\n                arr1[sptSet[u].i][sptSet[u].j].dijkstra.included = true;\r\n\r\n                await this.setState({\r\n                    arr: arr1\r\n                })\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == sptSet[u].i - 1 && ele.j == sptSet[u].j)).length == 0)\r\n                    && (sptSet[u].i - 1 >= 0 && sptSet[u].i - 1 < 20)\r\n                    && (sptSet[u].j >= 0 && sptSet[u].j < 61\r\n                        && !(arr1[sptSet[u].i - 1][sptSet[u].j].dijkstra.included)\r\n                    )\r\n                ) {\r\n\r\n                    if (sptSet[u].distance + 1 < sptSet[u - 61].distance) {\r\n                        sptSet[u - 61].distance = sptSet[u].distance + 1;\r\n                        let arr2 = arr;\r\n                        arr2[sptSet[u].i - 1][sptSet[u].j].dijkstra.parenti = sptSet[u].i;\r\n                        arr2[sptSet[u].i - 1][sptSet[u].j].dijkstra.parentj = sptSet[u].j;\r\n                        await this.setState({\r\n                            arr: arr2\r\n                        })\r\n\r\n                    }\r\n                }\r\n\r\n                // i+1 adjacent\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == sptSet[u].i + 1 && ele.j == sptSet[u].j)).length == 0)\r\n                    && (sptSet[u].i + 1 >= 0 && sptSet[u].i + 1 < 20)\r\n                    && (sptSet[u].j >= 0 && sptSet[u].j < 61\r\n                        && !(arr1[sptSet[u].i + 1][sptSet[u].j].dijkstra.included)\r\n                    )\r\n                ) {\r\n\r\n                    if (sptSet[u].distance + 1 < sptSet[u + 61].distance) {\r\n                        sptSet[u + 61].distance = sptSet[u].distance + 1;\r\n                        let arr2 = arr;\r\n                        arr2[sptSet[u].i + 1][sptSet[u].j].dijkstra.parenti = sptSet[u].i;\r\n                        arr2[sptSet[u].i + 1][sptSet[u].j].dijkstra.parentj = sptSet[u].j;\r\n                        await this.setState({\r\n                            arr: arr2\r\n                        })\r\n\r\n                    }\r\n                }\r\n\r\n                // j-1 adjacent\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == sptSet[u].i && ele.j == sptSet[u].j - 1)).length == 0)\r\n                    && (sptSet[u].i >= 0 && sptSet[u].i < 20)\r\n                    && (sptSet[u].j - 1 >= 0 && sptSet[u].j - 1 < 61\r\n                        && !(arr1[sptSet[u].i][sptSet[u].j - 1].dijkstra.included)\r\n                    )\r\n                ) {\r\n\r\n                    if (sptSet[u].distance + 1 < sptSet[u - 1].distance) {\r\n                        sptSet[u - 1].distance = sptSet[u].distance + 1;\r\n                        let arr2 = arr;\r\n                        arr2[sptSet[u].i][sptSet[u].j - 1].dijkstra.parenti = sptSet[u].i;\r\n                        arr2[sptSet[u].i][sptSet[u].j - 1].dijkstra.parentj = sptSet[u].j;\r\n                        await this.setState({\r\n                            arr: arr2\r\n                        })\r\n\r\n                    }\r\n                }\r\n\r\n                // j+1 adjacent\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == sptSet[u].i && ele.j == sptSet[u].j + 1)).length == 0)\r\n                    && (sptSet[u].i >= 0 && sptSet[u].i < 20)\r\n                    && (sptSet[u].j + 1 >= 0 && sptSet[u].j + 1 < 61\r\n                        && !(arr1[sptSet[u].i][sptSet[u].j + 1].dijkstra.included)\r\n                    )\r\n                ) {\r\n\r\n                    if (sptSet[u].distance + 1 < sptSet[u + 1].distance) {\r\n                        sptSet[u + 1].distance = sptSet[u].distance + 1;\r\n                        let arr2 = arr;\r\n                        arr2[sptSet[u].i][sptSet[u].j + 1].dijkstra.parenti = sptSet[u].i;\r\n                        arr2[sptSet[u].i][sptSet[u].j + 1].dijkstra.parentj = sptSet[u].j;\r\n                        await this.setState({\r\n                            arr: arr2\r\n                        })\r\n\r\n                    }\r\n                }\r\n\r\n                if ((sptSet[u].i == this.state.endNodei && sptSet[u].j == this.state.endNodej)) {\r\n                    this.dijkstraRegisterShortest(speed);\r\n                    clearInterval(timer);\r\n                }\r\n                v++;\r\n\r\n            }, timerSpeed);\r\n        } else {\r\n            for (let i = 0; i < sptSet.length; i++) {\r\n                let u = this.dijkstraMinDistanceNode(sptSet);\r\n                if (u == -1) {\r\n                    this.setState({\r\n                        disableGridFlag: false\r\n                    })\r\n                    break;\r\n                }\r\n                let arr1 = arr;\r\n                arr1[sptSet[u].i][sptSet[u].j].dijkstra.included = true;\r\n\r\n                this.setState({\r\n                    arr: arr1\r\n                })\r\n\r\n                //i-1 adjacent\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == sptSet[u].i - 1 && ele.j == sptSet[u].j)).length == 0)\r\n                    && (sptSet[u].i - 1 >= 0 && sptSet[u].i - 1 < 20)\r\n                    && (sptSet[u].j >= 0 && sptSet[u].j < 61\r\n                        && !(arr1[sptSet[u].i - 1][sptSet[u].j].dijkstra.included)\r\n                    )\r\n                ) {\r\n                    if (sptSet[u].distance + 1 < sptSet[u - 61].distance) {\r\n                        sptSet[u - 61].distance = sptSet[u].distance + 1;\r\n                        let arr2 = arr;\r\n                        arr2[sptSet[u].i - 1][sptSet[u].j].dijkstra.parenti = sptSet[u].i;\r\n                        arr2[sptSet[u].i - 1][sptSet[u].j].dijkstra.parentj = sptSet[u].j;\r\n                        this.setState({\r\n                            arr: arr2\r\n                        })\r\n                    }\r\n                }\r\n\r\n                // i+1 adjacent\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == sptSet[u].i + 1 && ele.j == sptSet[u].j)).length == 0)\r\n                    && (sptSet[u].i + 1 >= 0 && sptSet[u].i + 1 < 20)\r\n                    && (sptSet[u].j >= 0 && sptSet[u].j < 61\r\n                        && !(arr1[sptSet[u].i + 1][sptSet[u].j].dijkstra.included)\r\n                    )\r\n                ) {\r\n                    if (sptSet[u].distance + 1 < sptSet[u + 61].distance) {\r\n                        sptSet[u + 61].distance = sptSet[u].distance + 1;\r\n                        let arr2 = arr;\r\n                        arr2[sptSet[u].i + 1][sptSet[u].j].dijkstra.parenti = sptSet[u].i;\r\n                        arr2[sptSet[u].i + 1][sptSet[u].j].dijkstra.parentj = sptSet[u].j;\r\n                        this.setState({\r\n                            arr: arr2\r\n                        })\r\n                    }\r\n                }\r\n\r\n                // j-1 adjacent\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == sptSet[u].i && ele.j == sptSet[u].j - 1)).length == 0)\r\n                    && (sptSet[u].i >= 0 && sptSet[u].i < 20)\r\n                    && (sptSet[u].j - 1 >= 0 && sptSet[u].j - 1 < 61\r\n                        && !(arr1[sptSet[u].i][sptSet[u].j - 1].dijkstra.included)\r\n                    )\r\n                ) {\r\n                    if (sptSet[u].distance + 1 < sptSet[u - 1].distance) {\r\n                        sptSet[u - 1].distance = sptSet[u].distance + 1;\r\n                        let arr2 = arr;\r\n                        arr2[sptSet[u].i][sptSet[u].j - 1].dijkstra.parenti = sptSet[u].i;\r\n                        arr2[sptSet[u].i][sptSet[u].j - 1].dijkstra.parentj = sptSet[u].j;\r\n                        this.setState({\r\n                            arr: arr2\r\n                        })\r\n                    }\r\n                }\r\n\r\n                // j+1 adjacent\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == sptSet[u].i && ele.j == sptSet[u].j + 1)).length == 0)\r\n                    && (sptSet[u].i >= 0 && sptSet[u].i < 20)\r\n                    && (sptSet[u].j + 1 >= 0 && sptSet[u].j + 1 < 61\r\n                        && !(arr1[sptSet[u].i][sptSet[u].j + 1].dijkstra.included)\r\n                    )\r\n                ) {\r\n                    if (sptSet[u].distance + 1 < sptSet[u + 1].distance) {\r\n                        sptSet[u + 1].distance = sptSet[u].distance + 1;\r\n                        let arr2 = arr;\r\n                        arr2[sptSet[u].i][sptSet[u].j + 1].dijkstra.parenti = sptSet[u].i;\r\n                        arr2[sptSet[u].i][sptSet[u].j + 1].dijkstra.parentj = sptSet[u].j;\r\n                        this.setState({\r\n                            arr: arr2\r\n                        })\r\n                    }\r\n                }\r\n\r\n                if (sptSet[u].i == this.state.endNodei && sptSet[u].j == this.state.endNodej) {\r\n                    this.dijkstraRegisterShortest(0);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    dijkstraRegisterShortest = async (speed) => {\r\n        const { arr, startNodei, startNodej, endNodei, endNodej } = this.state;\r\n        if (arr[endNodei][endNodej].dijkstra.parenti != -1 && arr[endNodei][endNodej].dijkstra.parentj != -1) {\r\n            let i = endNodei;\r\n            let j = endNodej;\r\n            let timerSpeed = Number;\r\n            if (speed == 1) {\r\n                timerSpeed = 200;\r\n            } else if (speed == 2) {\r\n                timerSpeed = 500;\r\n            } else if (speed == 4) {\r\n                timerSpeed = 1\r\n            }\r\n            if (speed != 0) {\r\n                let timer = await setInterval(async () => {\r\n                    let x = arr[i][j].dijkstra.parenti;\r\n                    let y = arr[i][j].dijkstra.parentj;\r\n                    let arr1 = arr;\r\n                    arr1[i][j].dijkstra.shortestPath = true;\r\n                    await this.setState({\r\n                        arr: arr1\r\n                    })\r\n                    i = x;\r\n                    j = y;\r\n                    if (i == startNodei && j == startNodej) {\r\n                        this.setState({\r\n                            disableGridFlag: false\r\n                        })\r\n                        clearInterval(timer);\r\n                    }\r\n                }, timerSpeed);\r\n            } else {\r\n                while (i != startNodei || j != startNodej) {\r\n                    let x = arr[i][j].dijkstra.parenti;\r\n                    let y = arr[i][j].dijkstra.parentj;\r\n                    let arr1 = arr;\r\n                    arr1[i][j].dijkstra.shortestPath = true;\r\n                    await this.setState({\r\n                        arr: arr1\r\n                    })\r\n                    i = x;\r\n                    j = y;\r\n                }\r\n                await this.setState({\r\n                    disableGridFlag: false\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    dijkstraMinDistanceNode = (sptSet) => {\r\n        let min = Number.MAX_SAFE_INTEGER;\r\n        let minInd = -1;\r\n\r\n        for (let i = 0; i < sptSet.length; i++) {\r\n            if (this.state.arr[sptSet[i].i][sptSet[i].j].dijkstra.included == false\r\n                && ((this.state.wallRestrictedSpace.filter(ele => ele.i == sptSet[i].i && ele.j == sptSet[i].j)).length == 0)\r\n                && sptSet[i].distance < min\r\n            ) {\r\n\r\n                min = sptSet[i].distance;\r\n                minInd = i;\r\n            }\r\n        }\r\n        return minInd;\r\n    }\r\n\r\n    returnManhattenDistance = (i, j) => {\r\n        return Math.abs(i - this.state.endNodei) + Math.abs(j - this.state.endNodej);\r\n    }\r\n\r\n    aStarCalculate = async (speed) => {\r\n\r\n        const { arr, startNodei, startNodej } = this.state;\r\n        let sptSet = [];\r\n        arr.forEach((ele, i) => {\r\n            ele.forEach((element, j) => {\r\n                if (i == startNodei && j == startNodej) {\r\n                    sptSet.push({ i, j, distance: 0, fDistance: this.returnManhattenDistance(i, j) })\r\n                } else {\r\n                    sptSet.push({ i, j, distance: Number.MAX_SAFE_INTEGER, fDistance: Number.MAX_SAFE_INTEGER })\r\n                }\r\n            })\r\n        })\r\n\r\n        let v = 0;\r\n\r\n        let timerSpeed = Number;\r\n        if (speed == 1) {\r\n            timerSpeed = 200;\r\n        } else if (speed == 2) {\r\n            timerSpeed = 500;\r\n        } else if (speed == 4) {\r\n            timerSpeed = 1;\r\n        }\r\n        if (speed != 0) {\r\n            let timer = await setInterval(async () => {\r\n                this.setState({\r\n                    disableGridFlag: true\r\n                })\r\n                let u = this.aStarMinDistanceNode(sptSet);\r\n                if (u == -1) {\r\n                    clearInterval(timer);\r\n                    this.setState({\r\n                        disableGridFlag: false\r\n                    })\r\n                    return;\r\n                }\r\n                let arr1 = arr;\r\n                arr1[sptSet[u].i][sptSet[u].j].dijkstra.included = true;\r\n\r\n                await this.setState({\r\n                    arr: arr1\r\n                })\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == sptSet[u].i - 1 && ele.j == sptSet[u].j)).length == 0)\r\n                    && (sptSet[u].i - 1 >= 0 && sptSet[u].i - 1 < 20)\r\n                    && (sptSet[u].j >= 0 && sptSet[u].j < 61\r\n                        && !(arr1[sptSet[u].i - 1][sptSet[u].j].dijkstra.included)\r\n                    )\r\n                ) {\r\n\r\n                    if (sptSet[u].distance + 1 < sptSet[u - 61].distance) {\r\n                        sptSet[u - 61].distance = sptSet[u].distance + 1;\r\n                        sptSet[u - 61].fDistance = sptSet[u].distance + 1 + this.returnManhattenDistance(sptSet[u].i - 1, sptSet[u].j);\r\n                        let arr2 = arr;\r\n                        arr2[sptSet[u].i - 1][sptSet[u].j].dijkstra.parenti = sptSet[u].i;\r\n                        arr2[sptSet[u].i - 1][sptSet[u].j].dijkstra.parentj = sptSet[u].j;\r\n                        await this.setState({\r\n                            arr: arr2\r\n                        })\r\n\r\n                    }\r\n                }\r\n\r\n                // i+1 adjacent\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == sptSet[u].i + 1 && ele.j == sptSet[u].j)).length == 0)\r\n                    && (sptSet[u].i + 1 >= 0 && sptSet[u].i + 1 < 20)\r\n                    && (sptSet[u].j >= 0 && sptSet[u].j < 61\r\n                        && !(arr1[sptSet[u].i + 1][sptSet[u].j].dijkstra.included)\r\n                    )\r\n                ) {\r\n\r\n                    if (sptSet[u].distance + 1 < sptSet[u + 61].distance) {\r\n                        sptSet[u + 61].distance = sptSet[u].distance + 1;\r\n                        sptSet[u + 61].fDistance = sptSet[u].distance + 1 + this.returnManhattenDistance(sptSet[u].i + 1, sptSet[u].j);\r\n                        let arr2 = arr;\r\n                        arr2[sptSet[u].i + 1][sptSet[u].j].dijkstra.parenti = sptSet[u].i;\r\n                        arr2[sptSet[u].i + 1][sptSet[u].j].dijkstra.parentj = sptSet[u].j;\r\n                        await this.setState({\r\n                            arr: arr2\r\n                        })\r\n\r\n                    }\r\n                }\r\n\r\n                // j-1 adjacent\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == sptSet[u].i && ele.j == sptSet[u].j - 1)).length == 0)\r\n                    && (sptSet[u].i >= 0 && sptSet[u].i < 20)\r\n                    && (sptSet[u].j - 1 >= 0 && sptSet[u].j - 1 < 61\r\n                        && !(arr1[sptSet[u].i][sptSet[u].j - 1].dijkstra.included)\r\n                    )\r\n                ) {\r\n\r\n                    if (sptSet[u].distance + 1 < sptSet[u - 1].distance) {\r\n                        sptSet[u - 1].distance = sptSet[u].distance + 1;\r\n                        sptSet[u - 1].fDistance = sptSet[u].distance + 1 + this.returnManhattenDistance(sptSet[u].i, sptSet[u].j - 1);\r\n                        let arr2 = arr;\r\n                        arr2[sptSet[u].i][sptSet[u].j - 1].dijkstra.parenti = sptSet[u].i;\r\n                        arr2[sptSet[u].i][sptSet[u].j - 1].dijkstra.parentj = sptSet[u].j;\r\n                        await this.setState({\r\n                            arr: arr2\r\n                        })\r\n\r\n                    }\r\n                }\r\n\r\n                // j+1 adjacent\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == sptSet[u].i && ele.j == sptSet[u].j + 1)).length == 0)\r\n                    && (sptSet[u].i >= 0 && sptSet[u].i < 20)\r\n                    && (sptSet[u].j + 1 >= 0 && sptSet[u].j + 1 < 61\r\n                        && !(arr1[sptSet[u].i][sptSet[u].j + 1].dijkstra.included)\r\n                    )\r\n                ) {\r\n\r\n                    if (sptSet[u].distance + 1 < sptSet[u + 1].distance) {\r\n                        sptSet[u + 1].distance = sptSet[u].distance + 1;\r\n                        sptSet[u + 1].fDistance = sptSet[u].distance + 1 + this.returnManhattenDistance(sptSet[u].i, sptSet[u].j + 1);\r\n                        let arr2 = arr;\r\n                        arr2[sptSet[u].i][sptSet[u].j + 1].dijkstra.parenti = sptSet[u].i;\r\n                        arr2[sptSet[u].i][sptSet[u].j + 1].dijkstra.parentj = sptSet[u].j;\r\n                        await this.setState({\r\n                            arr: arr2\r\n                        })\r\n\r\n                    }\r\n                }\r\n\r\n                if ((sptSet[u].i == this.state.endNodei && sptSet[u].j == this.state.endNodej)) {\r\n                    this.dijkstraRegisterShortest(speed);\r\n                    clearInterval(timer);\r\n                }\r\n                v++;\r\n\r\n            }, timerSpeed);\r\n        } else {\r\n            for (let i = 0; i < sptSet.length; i++) {\r\n                let u = this.aStarMinDistanceNode(sptSet);\r\n                if (u == -1) {\r\n                    this.setState({\r\n                        disableGridFlag: false\r\n                    })\r\n                    break;\r\n                }\r\n                let arr1 = arr;\r\n                arr1[sptSet[u].i][sptSet[u].j].dijkstra.included = true;\r\n\r\n                this.setState({\r\n                    arr: arr1\r\n                })\r\n\r\n                //i-1 adjacent\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == sptSet[u].i - 1 && ele.j == sptSet[u].j)).length == 0)\r\n                    && (sptSet[u].i - 1 >= 0 && sptSet[u].i - 1 < 20)\r\n                    && (sptSet[u].j >= 0 && sptSet[u].j < 61\r\n                        && !(arr1[sptSet[u].i - 1][sptSet[u].j].dijkstra.included)\r\n                    )\r\n                ) {\r\n                    if (sptSet[u].distance + 1 < sptSet[u - 61].distance) {\r\n                        sptSet[u - 61].distance = sptSet[u].distance + 1;\r\n                        sptSet[u - 61].fDistance = sptSet[u].distance + 1 + this.returnManhattenDistance(sptSet[u].i - 1, sptSet[u].j);\r\n                        let arr2 = arr;\r\n                        arr2[sptSet[u].i - 1][sptSet[u].j].dijkstra.parenti = sptSet[u].i;\r\n                        arr2[sptSet[u].i - 1][sptSet[u].j].dijkstra.parentj = sptSet[u].j;\r\n                        this.setState({\r\n                            arr: arr2\r\n                        })\r\n                    }\r\n                }\r\n\r\n                // i+1 adjacent\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == sptSet[u].i + 1 && ele.j == sptSet[u].j)).length == 0)\r\n                    && (sptSet[u].i + 1 >= 0 && sptSet[u].i + 1 < 20)\r\n                    && (sptSet[u].j >= 0 && sptSet[u].j < 61\r\n                        && !(arr1[sptSet[u].i + 1][sptSet[u].j].dijkstra.included)\r\n                    )\r\n                ) {\r\n                    if (sptSet[u].distance + 1 < sptSet[u + 61].distance) {\r\n                        sptSet[u + 61].distance = sptSet[u].distance + 1;\r\n                        sptSet[u + 61].fDistance = sptSet[u].distance + 1 + this.returnManhattenDistance(sptSet[u].i + 1, sptSet[u].j);\r\n                        let arr2 = arr;\r\n                        arr2[sptSet[u].i + 1][sptSet[u].j].dijkstra.parenti = sptSet[u].i;\r\n                        arr2[sptSet[u].i + 1][sptSet[u].j].dijkstra.parentj = sptSet[u].j;\r\n                        this.setState({\r\n                            arr: arr2\r\n                        })\r\n                    }\r\n                }\r\n\r\n                // j-1 adjacent\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == sptSet[u].i && ele.j == sptSet[u].j - 1)).length == 0)\r\n                    && (sptSet[u].i >= 0 && sptSet[u].i < 20)\r\n                    && (sptSet[u].j - 1 >= 0 && sptSet[u].j - 1 < 61\r\n                        && !(arr1[sptSet[u].i][sptSet[u].j - 1].dijkstra.included)\r\n                    )\r\n                ) {\r\n                    if (sptSet[u].distance + 1 < sptSet[u - 1].distance) {\r\n                        sptSet[u - 1].distance = sptSet[u].distance + 1;\r\n                        sptSet[u - 1].fDistance = sptSet[u].distance + 1 + this.returnManhattenDistance(sptSet[u].i, sptSet[u].j - 1);\r\n                        let arr2 = arr;\r\n                        arr2[sptSet[u].i][sptSet[u].j - 1].dijkstra.parenti = sptSet[u].i;\r\n                        arr2[sptSet[u].i][sptSet[u].j - 1].dijkstra.parentj = sptSet[u].j;\r\n                        this.setState({\r\n                            arr: arr2\r\n                        })\r\n                    }\r\n                }\r\n\r\n                // j+1 adjacent\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == sptSet[u].i && ele.j == sptSet[u].j + 1)).length == 0)\r\n                    && (sptSet[u].i >= 0 && sptSet[u].i < 20)\r\n                    && (sptSet[u].j + 1 >= 0 && sptSet[u].j + 1 < 61\r\n                        && !(arr1[sptSet[u].i][sptSet[u].j + 1].dijkstra.included)\r\n                    )\r\n                ) {\r\n                    if (sptSet[u].distance + 1 < sptSet[u + 1].distance) {\r\n                        sptSet[u + 1].distance = sptSet[u].distance + 1;\r\n                        sptSet[u + 1].fDistance = sptSet[u].distance + 1 + this.returnManhattenDistance(sptSet[u].i, sptSet[u].j + 1);\r\n                        let arr2 = arr;\r\n                        arr2[sptSet[u].i][sptSet[u].j + 1].dijkstra.parenti = sptSet[u].i;\r\n                        arr2[sptSet[u].i][sptSet[u].j + 1].dijkstra.parentj = sptSet[u].j;\r\n                        this.setState({\r\n                            arr: arr2\r\n                        })\r\n                    }\r\n                }\r\n\r\n                if (sptSet[u].i == this.state.endNodei && sptSet[u].j == this.state.endNodej) {\r\n                    this.dijkstraRegisterShortest(0);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    bestFirstSearchCalculate = async (speed) => {\r\n\r\n        const { arr, startNodei, startNodej } = this.state;\r\n        let sptSet = [];\r\n        arr.forEach((ele, i) => {\r\n            ele.forEach((element, j) => {\r\n                if (i == startNodei && j == startNodej) {\r\n                    sptSet.push({ i, j, fDistance: this.returnManhattenDistance(i, j) })\r\n                } else {\r\n                    sptSet.push({ i, j, fDistance: Number.MAX_SAFE_INTEGER })\r\n                }\r\n            })\r\n        })\r\n\r\n        let v = 0;\r\n\r\n        let timerSpeed = Number;\r\n        if (speed == 1) {\r\n            timerSpeed = 200;\r\n        } else if (speed == 2) {\r\n            timerSpeed = 500;\r\n        } else if (speed == 4) {\r\n            timerSpeed = 1;\r\n        }\r\n        if (speed != 0) {\r\n            let timer = await setInterval(async () => {\r\n                this.setState({\r\n                    disableGridFlag: true\r\n                })\r\n                let u = this.aStarMinDistanceNode(sptSet);\r\n                if (u == -1) {\r\n                    clearInterval(timer);\r\n                    this.setState({\r\n                        disableGridFlag: false\r\n                    })\r\n                    return;\r\n                }\r\n                let arr1 = arr;\r\n                arr1[sptSet[u].i][sptSet[u].j].dijkstra.included = true;\r\n\r\n                await this.setState({\r\n                    arr: arr1\r\n                })\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == sptSet[u].i - 1 && ele.j == sptSet[u].j)).length == 0)\r\n                    && (sptSet[u].i - 1 >= 0 && sptSet[u].i - 1 < 20)\r\n                    && (sptSet[u].j >= 0 && sptSet[u].j < 61\r\n                        && !(arr1[sptSet[u].i - 1][sptSet[u].j].dijkstra.included)\r\n                    )\r\n                ) {\r\n\r\n                    if (sptSet[u].fDistance < sptSet[u - 61].fDistance) {\r\n                        sptSet[u - 61].fDistance = this.returnManhattenDistance(sptSet[u].i - 1, sptSet[u].j);\r\n                        let arr2 = arr;\r\n                        arr2[sptSet[u].i - 1][sptSet[u].j].dijkstra.parenti = sptSet[u].i;\r\n                        arr2[sptSet[u].i - 1][sptSet[u].j].dijkstra.parentj = sptSet[u].j;\r\n                        await this.setState({\r\n                            arr: arr2\r\n                        })\r\n\r\n                    }\r\n                }\r\n\r\n                // i+1 adjacent\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == sptSet[u].i + 1 && ele.j == sptSet[u].j)).length == 0)\r\n                    && (sptSet[u].i + 1 >= 0 && sptSet[u].i + 1 < 20)\r\n                    && (sptSet[u].j >= 0 && sptSet[u].j < 61\r\n                        && !(arr1[sptSet[u].i + 1][sptSet[u].j].dijkstra.included)\r\n                    )\r\n                ) {\r\n\r\n                    if (sptSet[u].fDistance < sptSet[u + 61].fDistance) {\r\n                        sptSet[u + 61].fDistance = this.returnManhattenDistance(sptSet[u].i + 1, sptSet[u].j);\r\n                        let arr2 = arr;\r\n                        arr2[sptSet[u].i + 1][sptSet[u].j].dijkstra.parenti = sptSet[u].i;\r\n                        arr2[sptSet[u].i + 1][sptSet[u].j].dijkstra.parentj = sptSet[u].j;\r\n                        await this.setState({\r\n                            arr: arr2\r\n                        })\r\n\r\n                    }\r\n                }\r\n\r\n                // j-1 adjacent\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == sptSet[u].i && ele.j == sptSet[u].j - 1)).length == 0)\r\n                    && (sptSet[u].i >= 0 && sptSet[u].i < 20)\r\n                    && (sptSet[u].j - 1 >= 0 && sptSet[u].j - 1 < 61\r\n                        && !(arr1[sptSet[u].i][sptSet[u].j - 1].dijkstra.included)\r\n                    )\r\n                ) {\r\n\r\n                    if (sptSet[u].fDistance < sptSet[u - 1].fDistance) {\r\n                        sptSet[u - 1].fDistance = this.returnManhattenDistance(sptSet[u].i, sptSet[u].j - 1);\r\n                        let arr2 = arr;\r\n                        arr2[sptSet[u].i][sptSet[u].j - 1].dijkstra.parenti = sptSet[u].i;\r\n                        arr2[sptSet[u].i][sptSet[u].j - 1].dijkstra.parentj = sptSet[u].j;\r\n                        await this.setState({\r\n                            arr: arr2\r\n                        })\r\n\r\n                    }\r\n                }\r\n\r\n                // j+1 adjacent\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == sptSet[u].i && ele.j == sptSet[u].j + 1)).length == 0)\r\n                    && (sptSet[u].i >= 0 && sptSet[u].i < 20)\r\n                    && (sptSet[u].j + 1 >= 0 && sptSet[u].j + 1 < 61\r\n                        && !(arr1[sptSet[u].i][sptSet[u].j + 1].dijkstra.included)\r\n                    )\r\n                ) {\r\n\r\n                    if (sptSet[u].fDistance < sptSet[u + 1].fDistance) {\r\n                        sptSet[u + 1].fDistance = this.returnManhattenDistance(sptSet[u].i, sptSet[u].j + 1);\r\n                        let arr2 = arr;\r\n                        arr2[sptSet[u].i][sptSet[u].j + 1].dijkstra.parenti = sptSet[u].i;\r\n                        arr2[sptSet[u].i][sptSet[u].j + 1].dijkstra.parentj = sptSet[u].j;\r\n                        await this.setState({\r\n                            arr: arr2\r\n                        })\r\n\r\n                    }\r\n                }\r\n\r\n                if ((sptSet[u].i == this.state.endNodei && sptSet[u].j == this.state.endNodej)) {\r\n                    this.dijkstraRegisterShortest(speed);\r\n                    clearInterval(timer);\r\n                }\r\n                v++;\r\n\r\n            }, timerSpeed);\r\n        } else {\r\n            for (let i = 0; i < sptSet.length; i++) {\r\n                let u = this.aStarMinDistanceNode(sptSet);\r\n                if (u == -1) {\r\n                    this.setState({\r\n                        disableGridFlag: false\r\n                    })\r\n                    break;\r\n                }\r\n                let arr1 = arr;\r\n                arr1[sptSet[u].i][sptSet[u].j].dijkstra.included = true;\r\n\r\n                this.setState({\r\n                    arr: arr1\r\n                })\r\n\r\n                //i-1 adjacent\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == sptSet[u].i - 1 && ele.j == sptSet[u].j)).length == 0)\r\n                    && (sptSet[u].i - 1 >= 0 && sptSet[u].i - 1 < 20)\r\n                    && (sptSet[u].j >= 0 && sptSet[u].j < 61\r\n                        && !(arr1[sptSet[u].i - 1][sptSet[u].j].dijkstra.included)\r\n                    )\r\n                ) {\r\n                    if (sptSet[u].fDistance < sptSet[u - 61].fDistance) {\r\n                        sptSet[u - 61].fDistance = this.returnManhattenDistance(sptSet[u].i - 1, sptSet[u].j);\r\n                        let arr2 = arr;\r\n                        arr2[sptSet[u].i - 1][sptSet[u].j].dijkstra.parenti = sptSet[u].i;\r\n                        arr2[sptSet[u].i - 1][sptSet[u].j].dijkstra.parentj = sptSet[u].j;\r\n                        this.setState({\r\n                            arr: arr2\r\n                        })\r\n                    }\r\n                }\r\n\r\n                // i+1 adjacent\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == sptSet[u].i + 1 && ele.j == sptSet[u].j)).length == 0)\r\n                    && (sptSet[u].i + 1 >= 0 && sptSet[u].i + 1 < 20)\r\n                    && (sptSet[u].j >= 0 && sptSet[u].j < 61\r\n                        && !(arr1[sptSet[u].i + 1][sptSet[u].j].dijkstra.included)\r\n                    )\r\n                ) {\r\n                    if (sptSet[u].fDistance < sptSet[u + 61].fDistance) {\r\n                        sptSet[u + 61].fDistance = this.returnManhattenDistance(sptSet[u].i + 1, sptSet[u].j);\r\n                        let arr2 = arr;\r\n                        arr2[sptSet[u].i + 1][sptSet[u].j].dijkstra.parenti = sptSet[u].i;\r\n                        arr2[sptSet[u].i + 1][sptSet[u].j].dijkstra.parentj = sptSet[u].j;\r\n                        this.setState({\r\n                            arr: arr2\r\n                        })\r\n                    }\r\n                }\r\n\r\n                // j-1 adjacent\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == sptSet[u].i && ele.j == sptSet[u].j - 1)).length == 0)\r\n                    && (sptSet[u].i >= 0 && sptSet[u].i < 20)\r\n                    && (sptSet[u].j - 1 >= 0 && sptSet[u].j - 1 < 61\r\n                        && !(arr1[sptSet[u].i][sptSet[u].j - 1].dijkstra.included)\r\n                    )\r\n                ) {\r\n                    if (sptSet[u].fDistance < sptSet[u - 1].fDistance) {\r\n                        sptSet[u - 1].fDistance = this.returnManhattenDistance(sptSet[u].i, sptSet[u].j - 1);\r\n                        let arr2 = arr;\r\n                        arr2[sptSet[u].i][sptSet[u].j - 1].dijkstra.parenti = sptSet[u].i;\r\n                        arr2[sptSet[u].i][sptSet[u].j - 1].dijkstra.parentj = sptSet[u].j;\r\n                        this.setState({\r\n                            arr: arr2\r\n                        })\r\n                    }\r\n                }\r\n\r\n                // j+1 adjacent\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == sptSet[u].i && ele.j == sptSet[u].j + 1)).length == 0)\r\n                    && (sptSet[u].i >= 0 && sptSet[u].i < 20)\r\n                    && (sptSet[u].j + 1 >= 0 && sptSet[u].j + 1 < 61\r\n                        && !(arr1[sptSet[u].i][sptSet[u].j + 1].dijkstra.included)\r\n                    )\r\n                ) {\r\n                    if (sptSet[u].fDistance < sptSet[u + 1].fDistance) {\r\n                        sptSet[u + 1].fDistance = this.returnManhattenDistance(sptSet[u].i, sptSet[u].j + 1);\r\n                        let arr2 = arr;\r\n                        arr2[sptSet[u].i][sptSet[u].j + 1].dijkstra.parenti = sptSet[u].i;\r\n                        arr2[sptSet[u].i][sptSet[u].j + 1].dijkstra.parentj = sptSet[u].j;\r\n                        this.setState({\r\n                            arr: arr2\r\n                        })\r\n                    }\r\n                }\r\n\r\n                if (sptSet[u].i == this.state.endNodei && sptSet[u].j == this.state.endNodej) {\r\n                    this.dijkstraRegisterShortest(0);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    aStarMinDistanceNode = (sptSet) => {\r\n        let min = Number.MAX_SAFE_INTEGER;\r\n        let minInd = -1;\r\n\r\n        for (let i = 0; i < sptSet.length; i++) {\r\n            if (this.state.arr[sptSet[i].i][sptSet[i].j].dijkstra.included == false\r\n                && ((this.state.wallRestrictedSpace.filter(ele => ele.i == sptSet[i].i && ele.j == sptSet[i].j)).length == 0)\r\n                && sptSet[i].fDistance < min\r\n            ) {\r\n\r\n                min = sptSet[i].fDistance;\r\n                minInd = i;\r\n            }\r\n        }\r\n        return minInd;\r\n    }\r\n\r\n    dfsCalculate = async (speed) => {\r\n        const { arr, startNodei, startNodej } = this.state;\r\n        // this.dfsRecursiveCalculate(this.state.startNodei, this.state.startNodej);\r\n        let stack = [];\r\n        stack.push({ i: this.state.startNodei, j: this.state.startNodej });\r\n        let arr1 = arr;\r\n        arr1[stack[stack.length - 1].i][stack[stack.length - 1].j].dijkstra.included = true;\r\n        this.setState({\r\n            arr: arr1\r\n        })\r\n        if (speed == 0) {\r\n            while (stack.length != 0) {\r\n                let adjacent = this.dfsAdjacentNodes(stack[stack.length - 1].i, stack[stack.length - 1].j);\r\n                if (adjacent.i != -1 && adjacent.j != -1) {\r\n                    stack.push({ i: adjacent.i, j: adjacent.j });\r\n                    let arr1 = arr;\r\n                    arr1[stack[stack.length - 1].i][stack[stack.length - 1].j].dijkstra.included = true;\r\n                    this.setState({\r\n                        arr: arr1\r\n                    })\r\n                } else {\r\n                    stack.pop();\r\n                }\r\n                if (stack[stack.length - 1].i == this.state.startNodei && stack[stack.length - 1].j == this.state.startNodej) {\r\n                    break;\r\n                } else if (stack[stack.length - 1].i == this.state.endNodei && stack[stack.length - 1].j == this.state.endNodej) {\r\n                    while (stack.length != 0) {\r\n                        let arr1 = arr;\r\n                        arr1[stack[stack.length - 1].i][stack[stack.length - 1].j].dijkstra.shortestPath = true;\r\n                        this.setState({\r\n                            arr: arr1\r\n                        })\r\n                        stack.pop();\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n        } else {\r\n            let timerSpeed = Number;\r\n            if (speed == 1) {\r\n                timerSpeed = 200;\r\n            } else if (speed == 2) {\r\n                timerSpeed = 500;\r\n            } else if (speed == 4) {\r\n                timerSpeed = 1;\r\n            }\r\n\r\n            let timer = await setInterval(async () => {\r\n                this.setState({\r\n                    disableGridFlag: true\r\n                })\r\n                let adjacent = this.dfsAdjacentNodes(stack[stack.length - 1].i, stack[stack.length - 1].j);\r\n                if (adjacent.i != -1 && adjacent.j != -1) {\r\n                    stack.push({ i: adjacent.i, j: adjacent.j });\r\n                    let arr1 = arr;\r\n                    arr1[stack[stack.length - 1].i][stack[stack.length - 1].j].dijkstra.included = true;\r\n                    this.setState({\r\n                        arr: arr1\r\n                    })\r\n                } else {\r\n                    stack.pop();\r\n                }\r\n                if (stack[stack.length - 1].i == this.state.startNodei && stack[stack.length - 1].j == this.state.startNodej) {\r\n                    clearInterval(timer);\r\n                    this.setState({\r\n                        disableGridFlag: false\r\n                    })\r\n                    return;\r\n                } else if (stack[stack.length - 1].i == this.state.endNodei && stack[stack.length - 1].j == this.state.endNodej) {\r\n                    // while(stack.length!=0){\r\n                    //     let arr1 = arr;\r\n                    //     arr1[stack[stack.length-1].i][stack[stack.length-1].j].dijkstra.shortestPath = true;\r\n                    //     this.setState({\r\n                    //         arr: arr1\r\n                    //     })\r\n                    //     stack.pop();\r\n                    // }\r\n                    this.dfsRegisterPath(stack, timerSpeed);\r\n                    clearInterval(timer);\r\n                }\r\n\r\n            }, timerSpeed)\r\n        }\r\n    }\r\n\r\n    dfsRegisterPath = async (stack, timerSpeed) => {\r\n        const { arr } = this.state;\r\n        let timer = await setInterval(async () => {\r\n            let arr1 = arr;\r\n            arr1[stack[stack.length - 1].i][stack[stack.length - 1].j].dijkstra.shortestPath = true;\r\n            this.setState({\r\n                arr: arr1\r\n            })\r\n            stack.pop();\r\n            if (stack.length == 1) {\r\n                this.setState({\r\n                    disableGridFlag: false\r\n                })\r\n                clearInterval(timer);\r\n            }\r\n        }, timerSpeed);\r\n    }\r\n\r\n    dfsAdjacentNodes = (i, j) => {\r\n        const { arr, startNodei, startNodej } = this.state;\r\n        let tempi = -1;\r\n        let tempj = -1;\r\n\r\n        //i-1\r\n        if ((tempi == -1 && tempj == -1) && ((this.state.wallRestrictedSpace.filter(ele => ele.i == i - 1 && ele.j == j)).length == 0)\r\n            && (i - 1 >= 0 && i - 1 < 20)\r\n            && (j >= 0 && j < 61\r\n                && !(arr[i - 1][j].dijkstra.included)\r\n            )\r\n        ) {\r\n            tempi = i - 1;\r\n            tempj = j;\r\n        }\r\n\r\n        //j+1\r\n        if ((tempi == -1 && tempj == -1) && ((this.state.wallRestrictedSpace.filter(ele => ele.i == i && ele.j == j + 1)).length == 0)\r\n            && (i >= 0 && i < 20)\r\n            && (j + 1 >= 0 && j + 1 < 61\r\n                && !(arr[i][j + 1].dijkstra.included)\r\n            )\r\n        ) {\r\n            tempi = i;\r\n            tempj = j + 1;\r\n        }\r\n\r\n        //i+1\r\n        if ((tempi == -1 && tempj == -1) && ((this.state.wallRestrictedSpace.filter(ele => ele.i == i + 1 && ele.j == j)).length == 0)\r\n            && (i + 1 >= 0 && i + 1 < 20)\r\n            && (j >= 0 && j < 61\r\n                && !(arr[i + 1][j].dijkstra.included)\r\n            )\r\n        ) {\r\n            tempi = i + 1;\r\n            tempj = j;\r\n        }\r\n\r\n        //j-1\r\n        if ((tempi == -1 && tempj == -1) && ((this.state.wallRestrictedSpace.filter(ele => ele.i == i && ele.j == j - 1)).length == 0)\r\n            && (i >= 0 && i < 20)\r\n            && (j - 1 >= 0 && j - 1 < 61\r\n                && !(arr[i][j - 1].dijkstra.included)\r\n            )\r\n        ) {\r\n            tempi = i;\r\n            tempj = j - 1;\r\n        }\r\n\r\n        return { i: tempi, j: tempj };\r\n    }\r\n\r\n    bfsCalculate = async (speed) => {\r\n        const { arr, startNodei, startNodej } = this.state;\r\n\r\n        let queue = [];\r\n        queue.push({ i: this.state.startNodei, j: this.state.startNodej });\r\n        let arr1 = arr;\r\n        arr1[queue[0].i][queue[0].j].dijkstra.included = true;\r\n        this.setState({\r\n            arr: arr1\r\n        })\r\n        if (speed == 0) {\r\n            while (queue.length != 0) {\r\n                //i-1\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == queue[0].i - 1 && ele.j == queue[0].j)).length == 0)\r\n                    && (queue[0].i - 1 >= 0 && queue[0].i - 1 < 20)\r\n                    && (queue[0].j >= 0 && queue[0].j < 61\r\n                        && !(arr[queue[0].i - 1][queue[0].j].dijkstra.included)\r\n                    )\r\n                ) {\r\n                    let arr2 = arr;\r\n                    arr2[queue[0].i - 1][queue[0].j].dijkstra.parenti = queue[0].i;\r\n                    arr2[queue[0].i - 1][queue[0].j].dijkstra.parentj = queue[0].j;\r\n                    queue.push({ i: queue[0].i - 1, j: queue[0].j });\r\n                    arr2[queue[0].i - 1][queue[0].j].dijkstra.included = true;\r\n                    this.setState({\r\n                        arr: arr2\r\n                    })\r\n                    if (queue[queue.length - 1].i == this.state.endNodei && queue[queue.length - 1].j == this.state.endNodej) {\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                // i+1 adjacent\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == queue[0].i + 1 && ele.j == queue[0].j)).length == 0)\r\n                    && (queue[0].i + 1 >= 0 && queue[0].i + 1 < 20)\r\n                    && (queue[0].j >= 0 && queue[0].j < 61\r\n                        && !(arr[queue[0].i + 1][queue[0].j].dijkstra.included)\r\n                    )\r\n                ) {\r\n                    let arr2 = arr;\r\n                    arr2[queue[0].i + 1][queue[0].j].dijkstra.parenti = queue[0].i;\r\n                    arr2[queue[0].i + 1][queue[0].j].dijkstra.parentj = queue[0].j;\r\n                    queue.push({ i: queue[0].i + 1, j: queue[0].j });\r\n                    arr2[queue[0].i + 1][queue[0].j].dijkstra.included = true;\r\n                    this.setState({\r\n                        arr: arr2\r\n                    })\r\n                    if (queue[queue.length - 1].i == this.state.endNodei && queue[queue.length - 1].j == this.state.endNodej) {\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                // j-1 adjacent\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == queue[0].i && ele.j == queue[0].j - 1)).length == 0)\r\n                    && (queue[0].i >= 0 && queue[0].i < 20)\r\n                    && (queue[0].j - 1 >= 0 && queue[0].j - 1 < 61\r\n                        && !(arr[queue[0].i][queue[0].j - 1].dijkstra.included)\r\n                    )\r\n                ) {\r\n                    let arr2 = arr;\r\n                    arr2[queue[0].i][queue[0].j - 1].dijkstra.parenti = queue[0].i;\r\n                    arr2[queue[0].i][queue[0].j - 1].dijkstra.parentj = queue[0].j;\r\n                    queue.push({ i: queue[0].i, j: queue[0].j - 1 });\r\n                    arr2[queue[0].i][queue[0].j - 1].dijkstra.included = true;\r\n                    this.setState({\r\n                        arr: arr2\r\n                    })\r\n                    if (queue[queue.length - 1].i == this.state.endNodei && queue[queue.length - 1].j == this.state.endNodej) {\r\n                        break;\r\n                    }\r\n                }\r\n                // j+1 adjacent\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == queue[0].i && ele.j == queue[0].j + 1)).length == 0)\r\n                    && (queue[0].i >= 0 && queue[0].i < 20)\r\n                    && (queue[0].j + 1 >= 0 && queue[0].j + 1 < 61\r\n                        && !(arr[queue[0].i][queue[0].j + 1].dijkstra.included)\r\n                    )\r\n                ) {\r\n                    let arr2 = arr;\r\n                    arr2[queue[0].i][queue[0].j + 1].dijkstra.parenti = queue[0].i;\r\n                    arr2[queue[0].i][queue[0].j + 1].dijkstra.parentj = queue[0].j;\r\n                    queue.push({ i: queue[0].i, j: queue[0].j + 1 });\r\n                    arr2[queue[0].i][queue[0].j + 1].dijkstra.included = true;\r\n                    this.setState({\r\n                        arr: arr2\r\n                    })\r\n                    if (queue[queue.length - 1].i == this.state.endNodei && queue[queue.length - 1].j == this.state.endNodej) {\r\n                        break;\r\n                    }\r\n                }\r\n                queue.shift();\r\n            }\r\n\r\n            if (arr[this.state.endNodei][this.state.endNodej].dijkstra.parenti != -1 && arr[this.state.endNodei][this.state.endNodej].dijkstra.parentj != -1) {\r\n                let i = this.state.endNodei;\r\n                let j = this.state.endNodej;\r\n                while (i != startNodei || j != startNodej) {\r\n                    let x = arr[i][j].dijkstra.parenti;\r\n                    let y = arr[i][j].dijkstra.parentj;\r\n                    let arr1 = arr;\r\n                    arr1[i][j].dijkstra.shortestPath = true;\r\n                    this.setState({\r\n                        arr: arr1\r\n                    })\r\n                    i = x;\r\n                    j = y;\r\n                }\r\n            }\r\n        } else {\r\n            let timerSpeed = Number;\r\n            if (speed == 1) {\r\n                timerSpeed = 200;\r\n            } else if (speed == 2) {\r\n                timerSpeed = 500;\r\n            } else if (speed == 4) {\r\n                timerSpeed = 1;\r\n            }\r\n            let timer = await setInterval(async () => {\r\n                this.setState({\r\n                    disableGridFlag: true\r\n                })\r\n\r\n                if (queue.length == 0) {\r\n                    clearInterval(timer);\r\n                    this.setState({\r\n                        disableGridFlag: false\r\n                    })\r\n                    return;\r\n                }\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == queue[0].i - 1 && ele.j == queue[0].j)).length == 0)\r\n                    && (queue[0].i - 1 >= 0 && queue[0].i - 1 < 20)\r\n                    && (queue[0].j >= 0 && queue[0].j < 61\r\n                        && !(arr[queue[0].i - 1][queue[0].j].dijkstra.included)\r\n                    )\r\n                ) {\r\n                    let arr2 = arr;\r\n                    arr2[queue[0].i - 1][queue[0].j].dijkstra.parenti = queue[0].i;\r\n                    arr2[queue[0].i - 1][queue[0].j].dijkstra.parentj = queue[0].j;\r\n                    queue.push({ i: queue[0].i - 1, j: queue[0].j });\r\n                    arr2[queue[0].i - 1][queue[0].j].dijkstra.included = true;\r\n                    this.setState({\r\n                        arr: arr2\r\n                    })\r\n                    if (queue[queue.length - 1].i == this.state.endNodei && queue[queue.length - 1].j == this.state.endNodej) {\r\n                        this.bfsRegisterShortest(timerSpeed);\r\n                        clearInterval(timer);\r\n                    }\r\n                }\r\n\r\n                // i+1 adjacent\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == queue[0].i + 1 && ele.j == queue[0].j)).length == 0)\r\n                    && (queue[0].i + 1 >= 0 && queue[0].i + 1 < 20)\r\n                    && (queue[0].j >= 0 && queue[0].j < 61\r\n                        && !(arr[queue[0].i + 1][queue[0].j].dijkstra.included)\r\n                    )\r\n                ) {\r\n                    let arr2 = arr;\r\n                    arr2[queue[0].i + 1][queue[0].j].dijkstra.parenti = queue[0].i;\r\n                    arr2[queue[0].i + 1][queue[0].j].dijkstra.parentj = queue[0].j;\r\n                    queue.push({ i: queue[0].i + 1, j: queue[0].j });\r\n                    arr2[queue[0].i + 1][queue[0].j].dijkstra.included = true;\r\n                    this.setState({\r\n                        arr: arr2\r\n                    })\r\n                    if (queue[queue.length - 1].i == this.state.endNodei && queue[queue.length - 1].j == this.state.endNodej) {\r\n                        this.bfsRegisterShortest(timerSpeed);\r\n                        clearInterval(timer);\r\n                    }\r\n                }\r\n\r\n                // j-1 adjacent\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == queue[0].i && ele.j == queue[0].j - 1)).length == 0)\r\n                    && (queue[0].i >= 0 && queue[0].i < 20)\r\n                    && (queue[0].j - 1 >= 0 && queue[0].j - 1 < 61\r\n                        && !(arr[queue[0].i][queue[0].j - 1].dijkstra.included)\r\n                    )\r\n                ) {\r\n                    let arr2 = arr;\r\n                    arr2[queue[0].i][queue[0].j - 1].dijkstra.parenti = queue[0].i;\r\n                    arr2[queue[0].i][queue[0].j - 1].dijkstra.parentj = queue[0].j;\r\n                    queue.push({ i: queue[0].i, j: queue[0].j - 1 });\r\n                    arr2[queue[0].i][queue[0].j - 1].dijkstra.included = true;\r\n                    this.setState({\r\n                        arr: arr2\r\n                    })\r\n                    if (queue[queue.length - 1].i == this.state.endNodei && queue[queue.length - 1].j == this.state.endNodej) {\r\n                        this.bfsRegisterShortest(timerSpeed);\r\n                        clearInterval(timer);\r\n                    }\r\n                }\r\n                // j+1 adjacent\r\n                if (((this.state.wallRestrictedSpace.filter(ele => ele.i == queue[0].i && ele.j == queue[0].j + 1)).length == 0)\r\n                    && (queue[0].i >= 0 && queue[0].i < 20)\r\n                    && (queue[0].j + 1 >= 0 && queue[0].j + 1 < 61\r\n                        && !(arr[queue[0].i][queue[0].j + 1].dijkstra.included)\r\n                    )\r\n                ) {\r\n                    let arr2 = arr;\r\n                    arr2[queue[0].i][queue[0].j + 1].dijkstra.parenti = queue[0].i;\r\n                    arr2[queue[0].i][queue[0].j + 1].dijkstra.parentj = queue[0].j;\r\n                    queue.push({ i: queue[0].i, j: queue[0].j + 1 });\r\n                    arr2[queue[0].i][queue[0].j + 1].dijkstra.included = true;\r\n                    this.setState({\r\n                        arr: arr2\r\n                    })\r\n                    if (queue[queue.length - 1].i == this.state.endNodei && queue[queue.length - 1].j == this.state.endNodej) {\r\n                        this.bfsRegisterShortest(timerSpeed);\r\n                        clearInterval(timer);\r\n                    }\r\n                }\r\n                queue.shift();\r\n            }, timerSpeed);\r\n        }\r\n    }\r\n\r\n    bfsRegisterShortest = async (timerSpeed) => {\r\n        const { arr, startNodei, startNodej, endNodei, endNodej } = this.state;\r\n        let i = endNodei;\r\n        let j = endNodej;\r\n        let timer = await setInterval(async () => {\r\n            let x = arr[i][j].dijkstra.parenti;\r\n            let y = arr[i][j].dijkstra.parentj;\r\n            let arr1 = arr;\r\n            arr1[i][j].dijkstra.shortestPath = true;\r\n            await this.setState({\r\n                arr: arr1\r\n            })\r\n            i = x;\r\n            j = y;\r\n            if (i == startNodei && j == startNodej) {\r\n                this.setState({\r\n                    disableGridFlag: false\r\n                })\r\n                clearInterval(timer);\r\n            }\r\n        }, timerSpeed);\r\n    }\r\n\r\n\r\n    render() {\r\n        const { startNodei, startNodej, endNodei, endNodej, arr } = this.state;\r\n        return (\r\n            <div className={this.state.disableGridFlag ? \"disableGrid\" : \"enableGrid\"}>\r\n                <div className=\"headerClass\"><Header algorithmSelect={this.algorithmSelect} mazeSelect={this.mazeSelect} calculate={this.calculate} clearGrid={this.clearGrid} clearPath={this.clearPath} /></div>\r\n                <div className=\"bodyHeader\">\r\n                    <ul>\r\n                        <li>Source Node <FaHiking /></li>\r\n                        <li>Destination Node <FaArchway /></li>\r\n                        <li style={{ marginTop: 'auto' }}>Unvisited Node <div className=\"unvisited\"></div></li>\r\n                        <li style={{ marginTop: 'auto' }}>Visited Node <div className=\"visited\"></div></li>\r\n                        <li style={{ marginTop: 'auto' }}>Shortest Path Node <div className=\"shortestPath\"></div></li>\r\n                        <li style={{ marginTop: 'auto' }}>Obstacle Node <div className=\"obstacle\"></div></li>\r\n                    </ul>\r\n                    <div style={this.state.selectedAlgorithm == \"\" ? { display: \"block\" } : { display: \"none\" }} className=\"alignClass\">Select an algorithm to find the path!</div>\r\n                    <div style={this.state.selectedAlgorithm == \"dijkstra\" ? { display: \"block\" } : { display: \"none\" }} className=\"alignClass\">Dijkstra Algorithm is a weighted greedy algorithm which guarantees a shortest path with a time complexity of O(V^2) when represented using adjacency matrix and O(E logV) when represented using adjacency list.</div>\r\n                    <div style={this.state.selectedAlgorithm == \"A*\" ? { display: \"block\" } : { display: \"none\" }} className=\"alignClass\">A* Search Algorithm is a weighted greedy algorithm which is an extension to Dijkshtra's algorithm aiming at optimizing its performance by the use of heuristics, it guarantees a shortest path!</div>\r\n                    <div style={this.state.selectedAlgorithm == \"dfs\" ? { display: \"block\" } : { display: \"none\" }} className=\"alignClass\">Depth-First Search is an unweighted algorithm which starts at the root node and explores as far as possible along each branch before backtracking, it does not guarantee a shortest path!</div>\r\n                    <div style={this.state.selectedAlgorithm == \"bfs\" ? { display: \"block\" } : { display: \"none\" }} className=\"alignClass\">Breadth-First Search is an unweighted algorithm which uses the opposite strategy as depth-first strategy to guarantee a shortest path!</div>\r\n                    <div style={this.state.selectedAlgorithm == \"bestFsearch\" ? { display: \"block\" } : { display: \"none\" }} className=\"alignClass\">Best First Search is a greedy weighted search algorithm that is a pure heuristic search which attempts to find a solution by predicting how close the end of a path is to a solution, it does not guarantee a shortest path!</div>\r\n                    <table>\r\n                        <tbody>\r\n                            {arr.map((ele, i) => (\r\n                                <tr key={i}>\r\n                                    {ele.map((ele, j) => (\r\n                                        <td\r\n                                            key={j}\r\n                                            onDragOver={(event) => this.allowDrop(event, i, j)}\r\n                                            onDrop={(event) => this.drop(event, i, j)}\r\n                                            onDoubleClick={(event) => this.doubleClickHandler(event, i, j)}\r\n                                            onClick={(event) => this.clickHandler(event, i, j)}\r\n                                            onMouseEnter={(event) => this.mouseMoveHandler(event, i, j)}\r\n                                            style={arr[i][j].dijkstra.included ? (arr[i][j].dijkstra.shortestPath ? { backgroundColor: \"green\" } : { backgroundColor: \"yellow\",animation:\"backgroundAnime 0.5s 2\" }) : ele.style}\r\n                                        >\r\n                                            {i == startNodei && j == startNodej &&\r\n                                                <div onDragStart={(event) => this.dragStart(event, i, j, \"start\")} draggable><FaHiking /></div>}\r\n                                            {i == endNodei && j == endNodej &&\r\n                                                <div onDragStart={(event) => this.dragStart(event, i, j, \"end\")} draggable><FaArchway /></div>}\r\n                                        </td>\r\n                                    ))}\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Body;","import React from 'react';\r\nimport './App.css';\r\nimport Body from './Body';\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <div><Body algorithm/></div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './Test.css';\r\n\r\nclass Test extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    checkBoxChange =(e)=>{\r\n        console.log(e.target.checked)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            <div className = \"switch\">\r\n                <input type=\"checkbox\" id = \"checkbox1\" onClick={this.checkBoxChange}/>\r\n                <label htmlFor=\"checkbox1\"></label>\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Test;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport Test from './Test';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}